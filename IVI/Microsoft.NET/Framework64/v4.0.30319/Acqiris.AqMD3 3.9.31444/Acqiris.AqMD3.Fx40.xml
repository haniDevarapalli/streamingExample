<doc>
	<assembly>
		<name>Acqiris.AqMD3.Fx40</name>
	</assembly>
	<members>
		<member name="T:Acqiris.AqMD3.AqMD3">
			<summary>Main driver class.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.#ctor(System.String,System.Boolean,System.Boolean)">
			<summary>Creates a new instance of the driver and opens and I/O session with the instrument.</summary>
			<param name="resourceName">An IVI logical name or an instrument specific string that identifies the address of the instrument, such as a VISA resource descriptor string.</param>
			<param name="idQuery">Specifies whether to verify the ID of the instrument.</param>
			<param name="reset">Specifies whether to reset the instrument.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.#ctor(System.String,System.Boolean,System.Boolean,System.String)">
			<summary>Creates a new instance of the driver and opens and I/O session with the instrument.</summary>
			<param name="resourceName">An IVI logical name or an instrument specific string that identifies the address of the instrument, such as a VISA resource descriptor string.</param>
			<param name="idQuery">Specifies whether to verify the ID of the instrument.</param>
			<param name="reset">Specifies whether to reset the instrument.</param>
			<param name="options">A string that allows the user to specify the initial values of certain inherent attributes.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.#ctor(System.String,System.Boolean,System.Boolean,Ivi.Driver.LockType,System.String,System.String)">
			<summary>Creates a new instance of the driver and opens and I/O session with the instrument.</summary>
			<param name="resourceName">An IVI logical name or an instrument specific string that identifies the address of the instrument, such as a VISA resource descriptor string.</param>
			<param name="idQuery">Specifies whether to verify the ID of the instrument.</param>
			<param name="reset">Specifies whether to reset the instrument.</param>
			<param name="lockType">Specifies whether to use process-wide locking or machine-wide locking.</param>
			<param name="accessKey">Specifies a user-selectable access key to identify the lock.  Driver instances that are created with the same accessKey will be protected from simultaneous access by multiple threads within a process or across processes, depending upon the value of the lockType parameter.</param>
			<param name="options">A string that allows the user to specify the initial values of certain inherent attributes.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Close">
			<summary>Closes the I/O session to the instrument.  Driver methods and properties that access the instrument are not accessible after Close is called.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.GetService(System.Type)">
			<summary>Gets the service object of the specified type.  Typically, this is an interface supported by the driver.</summary>
			<param name="serviceType">The type object of the service to get.  Typically, this is the type of an interface supported by the driver.</param>
			<returns>A service object of the specified type.  Null is returned if there is no service object of the specified type.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Dispose">
			<summary>Performs driver-defined tasks associated with freeing, releasing, or resetting unmanaged resources.  Calling this method is equivalent to calling the driver's Close method.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.ResetInterchangeCheck">
			<summary>Resets the interchangeability checking algorithms of the driver so that methods and properties that executed prior to calling this function have no affect on whether future calls to the driver generate interchangeability warnings.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.InvalidateAllAttributes">
			<summary>Invalidates all of the driver's cached values.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.GetSupportedInstrumentModels">
			<summary>Returns the list of instrument models that the IVI specific  driver can control.  The string does not include an abbreviation  for the manufacturer if it is the same for all models.</summary>
			<returns>Array of instrument models.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.GetGroupCapabilities">
			<summary>Returns the list of the class capability groups implemented by the  driver.  Capability group names are documented in the IVI class  specifications.  If the driver is not class compliant, the driver  returns an empty array.</summary>
			<returns>Array of class capability groups.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.ErrorQuery">
			<summary>Queries the instrument and returns instrument specific error information.  This function can be used when QueryInstrumentStatus is True to retrieve error details when the driver detects an instrument error.</summary>
			<returns>A struct that includes the instrument error code and error message.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.SelfTest">
			<summary>Performs an instrument self test, waits for the instrument to complete the test, and queries the instrument for the results.  If the instrument passes the test, TestResult is zero and TestMessage is 'Self test passed'.</summary>
			<returns>A struct that includes the numeric result from the self test operation (0 = no error, e.g. the test passed) and self test status message.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Disable">
			<summary>Quickly places the instrument in a state where it has no, or minimal, effect on the external system to which it is connected.  This state is not necessarily a known state.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.ResetWithDefaults">
			<summary>Does the equivalent of Reset and then, (1) disables class extension capability groups, (2) sets attributes to initial values defined by class specs, and (3) configures the driver to option string settings used when Initialize was last executed.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Reset">
			<summary>Places the instrument in a known state and configures instrument options on which the IVI specific driver depends.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Lock">
			<summary>Attempts to acquire a synchronization lock on this instance of the driver.  The calling thread is blocked indefinitely until the lock is acquired. This method is useful for gaining exclusive access to the driver instance across a series of methods calls.  The user must call the Unlock method on the returned lock to relinquish the lock and allow other threads to access this instance of the driver.</summary>
			<returns>A reference to the acquired lock.  Unlock is called on the returned reference.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Lock(Ivi.Driver.PrecisionTimeSpan)">
			<summary>Attempts to acquire a synchronization lock on this instance of the driver.  The calling thread is blocked until either the lock is acquired or maxTime expires.  If the lock is not acquired within the interval specified by maxTime, an exception is thrown.  This method is useful for gaining exclusive access to the driver instance across a series of methods calls.  The user must call the Unlock method on the returned lock to relinquish the lock and allow other threads to access this instance of the driver.</summary>
			<param name="maxTime">Specifies the maximum amount of time to wait to acquire the lock.</param>
			<returns>A reference to the acquired lock.  Unlock is called on the returned reference.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Abort">
			<summary>Aborts an acquisition and returns the digitizer to the Idle state.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.ConfigureAcquisition(System.Int64,System.Int64,System.Double)">
			<summary>This function configures the most commonly configured attributes of the digitizer acquisition sub-system. These attributes are the samples per record, the number of records, and the sample rate.</summary>
			<param name="numberOfRecordsToAcquire">Specifies the number of records in the acquisition. This value sets the Num Records to Acquire property.</param>
			<param name="recordSize">Specifies the number of samples in each record. This value sets the Record Size property.</param>
			<param name="sampleRate">Specifies the sample rate in samples per second. This value sets the Sample Rate property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateWaveformDouble(System.Int64)">
			<summary>Creates a waveform object of type Double that can be used with Read and Fetch methods.</summary>
			<param name="size">Number of elements in the waveform. If zero, the driver will create a waveform with a number of samples based on the current driver configuration.</param>
			<returns>Waveform object with elements of type Double.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateWaveformInt32(System.Int64)">
			<summary>Create a waveform object of type Int32 that can be used with Read and Fetch methods.</summary>
			<param name="size">Number of elements in the waveform. If zero, the driver will create a waveform with a number of samples based on the current driver configuration.</param>
			<returns>Waveform object with elements of type Int32.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateWaveformInt16(System.Int64)">
			<summary>Create a waveform object of type Int16 that can be used with Read and Fetch methods.</summary>
			<param name="size">Number of elements in the waveform. If zero, the driver will create a waveform with a number of samples based on the current driver configuration.</param>
			<returns>Waveform object with elements of type Int16.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateWaveformSByte(System.Int64)">
			<summary>Create a waveform object of type SByte that can be used with Read and Fetch methods.</summary>
			<param name="size">Number of elements in the waveform. If zero, the driver will create a waveform with a number of samples based on the current driver configuration.</param>
			<returns>Waveform object with elements of type SByte.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateWaveformCollectionDouble(System.Int64,System.Int64)">
			<summary>Create a collection of waveform objects of type Double that can be used with multi-record Fetch methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns>A collection of waveform objects with elements of type Double.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateWaveformCollectionInt32(System.Int64,System.Int64)">
			<summary>Create a collection of waveform objects of type Int32 that can be used with multi-record Fetch methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns>A collection of waveform objects with elements of type Int32.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateWaveformCollectionInt16(System.Int64,System.Int64)">
			<summary>Create a collection of waveform objects of type Int16 that can be used with multi-record Fetch methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns>A collection of waveform objects with elements of type Int16.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateWaveformCollectionSByte(System.Int64,System.Int64)">
			<summary>Create a collection of waveform objects of type SByte that can be used with multi-record Fetch methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns>A collection of waveform objects with elements of type SByte.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Initiate">
			<summary>Initiates a waveform acquisition.  The digitizer leaves the Idle state and waits for a trigger.  The digitizer acquires a waveform for each enabled channel.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.QueryMinWaveformMemory(System.Int32,System.Int64,System.Int64,System.Int64)">
			<summary>This function is used to determine the minimum amount of memory that is needed to fetch or read data from the digitizer with maximum performance.</summary>
			<param name="dataWidth">Specifies the size of the sampled data that will be retrieved. The value of this parameter must be 8, 16, 32 or 64, corresponding to the intended Read/Fetch method.</param>
			<param name="numberOfRecords">Specifies the number of records that will be read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points to return.</param>
			<returns>The minimum buffer size in samples needed for a subsequent Read or Fetch call with the same readout parameters.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.WaitForAcquisitionComplete(Ivi.Driver.PrecisionTimeSpan)">
			<summary>Waits until the configured acquisition is complete.  If no acquisition is currently running, this function returns immediately.   If the acquisition does not complete  within the time period the user specified with the MaxTimeMilliseconds parameter, the function returns the Max Time Exceeded error.</summary>
			<param name="maxTime">Specifies the maximum time the end-user allows for this method to complete. If maxTime is PrecisionTimeSpan.MaxValue, the method waits indefinitely for the acquisition to complete.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.SendSoftwareArm">
			<summary>Not Supported - This function follows semantics similar to Send Software Trigger.  Refer to IVI-3.3: Standard Cross-Class Capabilities Specification for the prototype and complete description of the Send Software Trigger function.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Configure(System.String,Ivi.Digitizer.ArmSourceOperator)">
			<summary>Not Supported - Configures the digitizer to arm based on multiple arm sources. The digitizer can be instructed to arm when any one of multiple arm source conditions are met or when all specified arm source conditions are met.</summary>
			<param name="sourceList">A comma separated list of source names to be used in a multi arm scenario. The driver uses this value to set the Arm Source List property.</param>
			<param name="sourceOperator">Specifies the boolean operation to apply to the arm sources specified by the SourceList parameter. The driver uses this value to set the Arm Source Operator property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.SelfCalibrate">
			<summary>Executes all internal calibrations.  If the digitizer does not support calibration, this function silently succeeds.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Configure(Ivi.Digitizer.ReferenceOscillatorSource,System.Double)">
			<summary>Configures the digitizer's reference oscillator.</summary>
			<param name="source">Specifies the source of the reference frequency signal. The driver uses this value to set the Reference Oscillator Source property. See the property description for more details.</param>
			<param name="frequency">Specifies the frequency of the external reference oscillator. This parameter is only used if the Source is set to External. The driver uses this value to set the Reference Oscillator Frequency property. See the property description for more details.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Configure(Ivi.Digitizer.SampleClockSource,System.Double,System.Double)">
			<summary>Configures the digitizer's sample clock.</summary>
			<param name="source">Specifies the source of the sample clock signal. The driver uses this value to set the Sample Clock Source property.</param>
			<param name="frequency">Specifies the frequency of the external sample clock. This parameter is only used if the Sample Clock Source property is set to External. The driver uses this value to set the External Sample Clock Frequency property.</param>
			<param name="divider">Specifies the value by which the external sample clock should be divided. This value is used only if the Sample Clock Source property is set to External.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.SendSoftwareTrigger">
			<summary>Refer to IVI-3.3: Standard Cross-Class Capabilities Specification for the prototype and complete description of this function.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Configure(System.String,Ivi.Digitizer.TriggerSourceOperator)">
			<summary>Not Supported - Configures the digitizer to trigger based on multiple trigger sources.  The digitizer can be instructed to trigger when any one of multiple trigger source conditions are met or when all specified trigger source conditions are met.</summary>
			<param name="sourceList">A comma separated list of source names to be used in a multi trigger scenario. The driver uses this value to set the Trigger Source List property.</param>
			<param name="sourceOperator">Specifies the boolean operation to apply to the trigger sources specified by the SourceList parameter. The driver uses this value to set the Trigger Source Operator property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.ReadControlRegisterInt32(System.Int32)">
			<summary>Reads the value of the UserControl register at given offset.</summary>
			<param name="offset">Offset in the User Control FPGA where the register will be read.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.StartProcessing(Acqiris.AqMD3.UserControlProcessingType)">
			<summary>Sends the Start command for the given Processing Type.</summary>
			<param name="processingType">The type of Processing to be started.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.StartSegmentation">
			<summary>Starts the segmentation mechanism.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.StopProcessing(Acqiris.AqMD3.UserControlProcessingType)">
			<summary>Sends the Stop command for the given Processing Type.</summary>
			<param name="processingType">The type of Processing to be stopped.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.StopSegmentation">
			<summary>Stops the segmentation mechanism.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.WaitForProcessingComplete(System.String,System.Int32,System.Int32)">
			<summary>Waits until the given Processing Type is complete. If this processing is not currently running, this function returns immediately. If the processing does not complete within the time period the user specified with the MaxTimeMilliseconds parameter, the function returns the Max Time Exceeded error.</summary>
			<param name="logicDevice">Specifies the LogicDevice this function has to wait upon. It must be equal to one of the LogicDevice repeated capability string.</param>
			<param name="processingType">The type of Processing to be waited upon.</param>
			<param name="maxTimeMilliseconds">Specifies the maximum time the end-user allows for this function to complete. The units are milliseconds. Defined values: IviDigitizerTimeOutInfinite (-1) - The function waits indefinitely for the acquisition to complete.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.WriteControlRegisterInt32(System.Int32,System.Int32)">
			<summary>Writes the given Value to the User Control register at given Offset.</summary>
			<param name="offset">Offset in the User Control FPGA where the register will be written.</param>
			<param name="value">Value to write to the register.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Continue">
			<summary>Marks the acquired (single- or multi-record) waveform currently available for fetching as no longer needed (e.g. once it has been read). This allows the corresponding memory segment(s) to be released and made available for new acquisitions.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Initiate">
			<summary>Initiates a waveform acquisition.  The digitizer leaves the Idle state and waits for a trigger.  The digitizer acquires a waveform for each enabled channel.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Abort">
			<summary>Aborts an acquisition and returns the digitizer to the Idle state.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.WaitForAcquisitionComplete(System.Int32)">
			<summary>Waits until the configured acquisition is complete.  If no acquisition is currently running, this function returns immediately.   If the acquisition does not complete  within the time period the user specified with the MaxTimeMilliseconds parameter, the function returns the Max Time Exceeded error.</summary>
			<param name="maxTimeMilliseconds">Specifies the maximum time the end-user allows for this function to complete.  The units are  milliseconds.  Defined values:
Max Time Infinite - The function waits indefinitely for the acquisition to complete.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.ConfigureAcquisition(System.Int64,System.Int64,System.Double)">
			<summary>This function configures the most commonly configured attributes of the digitizer acquisition sub-system. These attributes are the samples per record, the number of records, and the sample rate.</summary>
			<param name="numRecordsToAcquire">Specifies the number of records in the acquisition. This value sets the Num Records to Acquire attribute.</param>
			<param name="recordSize">Specifies the number of samples in each record.  This value sets the Record Size attribute.</param>
			<param name="sampleRate">Specifies the sample rate in samples per second.  This value sets the Sample Rate attribute.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.QueryMinWaveformMemory(System.Int32,System.Int64,System.Int64,System.Int64)">
			<summary>This function is used to determine the minimum amount of memory that is needed to fetch or read data from the digitizer with maximum performance.</summary>
			<param name="dataWidth">Specifies the size of the sampled data that will be retrieved. The value of this parameter must be 8, 16, 32 or 64, corresponding to the intended Read/Fetch function.</param>
			<param name="numRecords">Specifies the number of records that will be read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numPointsPerRecord">Specifies the number of data points to return.</param>
			<returns>The minimum buffer size in samples needed for a subsequent Read or Fetch call with the same readout parameters.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.ApplySetup">
			<summary>Applies directly the configured properties setup to the instrument.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.GetCalibrationArraySize(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.GetCalibrationArrayInt32(System.String,System.Int32[]@)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="values"></param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.SetCalibrationArrayInt32(System.String,System.Int32[])">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="values"></param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.GetCalibrationArrayReal64(System.String,System.Double[]@)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="values"></param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.SetCalibrationArrayReal64(System.String,System.Double[])">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="values"></param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.GetCalibrationValueInt32(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name">This function is private and for Acqiris-internal use only.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.SetCalibrationValueInt32(System.String,System.Int32)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name">This function is private and for Acqiris-internal use only.</param>
			<param name="value">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.SetCalibrationValueString(System.String,System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name">This function is private and for Acqiris-internal use only.</param>
			<param name="value">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.GetCalibrationValueString(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name">This function is private and for Acqiris-internal use only.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.SetCalibrationValueBoolean(System.String,System.Boolean)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name">This function is private and for Acqiris-internal use only.</param>
			<param name="value">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.GetCalibrationValueBoolean(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name">This function is private and for Acqiris-internal use only.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.GetCalibrationValueReal64(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name">This function is private and for Acqiris-internal use only.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.SetCalibrationValueReal64(System.String,System.Double)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name">This function is private and for Acqiris-internal use only.</param>
			<param name="value">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.WriteReg32(System.Int32,System.Int64,System.Int32)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="spaceAddress">This function is private and for Acqiris-internal use only.</param>
			<param name="registerAddress">This function is private and for Acqiris-internal use only.</param>
			<param name="value">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.ReadReg32(System.Int32,System.Int64)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="spaceAddress">This function is private and for Acqiris-internal use only.</param>
			<param name="registerAddress">This function is private and for Acqiris-internal use only.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.ReadBurstInt32(System.Int32,System.Int64,System.Int64,Acqiris.AqMD3.IAqMD3DataElements`1)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="spaceAddress">This function is private and for Acqiris-internal use only.</param>
			<param name="registerAddress">This function is private and for Acqiris-internal use only.</param>
			<param name="numberOfElements">This function is private and for Acqiris-internal use only.</param>
			<param name="elements"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.SendSoftwareTrigger">
			<summary>Refer to IVI-3.3: Standard Cross-Class Capabilities Specification for the prototype and complete description of this function.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.SelfCalibrate">
			<summary>Executes all internal calibrations.  If the digitizer does not support calibration, this function silently succeeds.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.LoadFromFile(System.String)">
			<summary>Load calibration values and info from file.</summary>
			<param name="path">Path of the file where the information will be loaded from.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.SaveToFile(System.String)">
			<summary>Save calibration values and info in a binary file.</summary>
			<param name="path">Path of the binary file where the information will be saved to.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Configure(Acqiris.AqMD3.ReferenceOscillatorSource,System.Double)">
			<summary>Configures the digitizer's reference oscillator.</summary>
			<param name="source">Specifies the source of the reference frequency signal. The driver uses this value to set the Reference Oscillator Source attribute. See the attribute description for more details.</param>
			<param name="frequency">Specifies the frequency of the external reference oscillator. This parameter is only used if the Source is set to External. The driver uses this value to set the Reference Oscillator Frequency attribute. See the attribute description for more details.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Configure(Acqiris.AqMD3.SampleClockSource,System.Double,System.Double)">
			<summary>Configures the digitizer's sample clock.</summary>
			<param name="source">Specifies the source of the sample clock signal. The driver uses this value to set the Sample Clock Source attribute. See the attribute description for more details.</param>
			<param name="frequency">Specifies the frequency of the external sample clock. This parameter is only used if the Sample Clock Source attribute is set to External. The driver uses this value to set the External Sample Clock Frequency attribute. See the attribute description for more details.</param>
			<param name="divider">Specifies the value by which the external sample clock should be divided.  This value is used only if the Sample Clock Source attribute is set to External.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.Cancel">
			<summary>Abort any running self-calibration and return.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.WriteBurstInt32(System.Int32,System.Int64,System.Int32[])">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="spaceAddress">This function is private and for Acqiris-internal use only.</param>
			<param name="registerAddress">This function is private and for Acqiris-internal use only.</param>
			<param name="dataArray">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateWaveformCollectionDouble(System.Int64,System.Int64)">
			<summary>Create a collection of waveform objects of type Double that can be used with multi-record Fetch methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateWaveformCollectionInt16(System.Int64,System.Int64)">
			<summary>Create a collection of waveform objects of type Int16 that can be used with multi-record Fetch methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateWaveformCollectionInt32(System.Int64,System.Int64)">
			<summary>Create a collection of waveform objects of type Int32 that can be used with multi-record Fetch methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateWaveformCollectionSByte(System.Int64,System.Int64)">
			<summary>Create a collection of waveform objects of type SByte that can be used with multi-record Fetch methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateAccumulatedWaveformCollectionDouble(System.Int64,System.Int64)">
			<summary>Create a collection of accumulated waveform objects of type Double that can be used with Fetch Accumulated Waveform methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateAccumulatedWaveformCollectionInt32(System.Int64,System.Int64)">
			<summary>Create a collection of accumulated waveform objects of type Int32 that can be used with Fetch Accumulated Waveform methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateWaveformDouble(System.Int64)">
			<summary>Creates a waveform object of type Double that can be used with Read and Fetch methods.</summary>
			<param name="size">Number of elements in the waveform. If zero, the driver will create a waveform with a number of samples based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateWaveformInt16(System.Int64)">
			<summary>Creates a waveform object of type Int16 that can be used with Read and Fetch methods.</summary>
			<param name="size">Number of elements in the waveform. If zero, the driver will create a waveform with a number of samples based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateWaveformInt32(System.Int64)">
			<summary>Creates a waveform object of type Int32 that can be used with Read and Fetch methods.</summary>
			<param name="size">Number of elements in the waveform. If zero, the driver will create a waveform with a number of samples based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateWaveformSByte(System.Int64)">
			<summary>Creates a waveform object of type SByte that can be used with Read and Fetch methods.</summary>
			<param name="size">Number of elements in the waveform. If zero, the driver will create a waveform with a number of samples based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateDDCWaveformCollectionComplexSampleInt16(System.Int64,System.Int64)">
			<summary>Create a collection of DDC waveform objects of struct ComplexSampleInt16 that can be used with DDCCore Fetch Waveform methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of ComplexSampleInt16 elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateDDCWaveformCollectionComplexSampleInt32(System.Int64,System.Int64)">
			<summary>Create a collection of DDC waveform objects of struct ComplexSampleInt16 that can be used with DDCCore Fetch Waveform methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of ComplexSampleInt32 elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateDDCRawWaveformCollectionInt16(System.Int64,System.Int64)">
			<summary>Create a collection of DDC raw waveform objects with elements of type short that can be used with DDCCore Fetch Raw Waveform methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of short elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateDDCRawWaveformCollectionInt32(System.Int64,System.Int64)">
			<summary>Create a collection of DDC raw waveform objects with elements of type int that can be used with DDCCore Fetch Raw Waveform methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of int elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateDataElementsInt32(System.Int64)">
			<summary />
			<param name="numberOfElements"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.CreateStreamElementsInt32(System.Int64)">
			<summary />
			<param name="numberOfElements"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.GetCalibrationArrayInt16(System.String,System.Int16[]@)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="values"></param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.SetCalibrationArrayInt16(System.String,System.Int16[])">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="values"></param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.InitiateGeneration">
			<summary>Start the pulses generation by software.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3.AbortGeneration">
			<summary>Abort the pulses generation.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.DriverOperation">
			<summary>Pointer to the IIviDriverOperation interface</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Identity">
			<summary>Pointer to the IIviDriverIdentity interface</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Utility">
			<summary>Pointer to the IIviDriverUtility interface</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.LogicalName">
			<summary>Read Only - Logical Name identifies a driver session in the Configuration Store.  If Logical Name is not empty, the driver was initialized from information in the driver session.  If it is empty, the driver was initialized without using the Configuration Store.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.IOResourceDescriptor">
			<summary>The resource descriptor specifies the connection to a physical  device.  It is either specified in the Configuration Store or  passed in the resource name at initialization.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Cache">
			<summary>Drivers may choose to always cache some instrument settings, never cache others, and optionally cache others, to avoid unecessary I/O to the instrument.  If True, the driver caches optionally cached instrument settings.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.QueryInstrumentStatus">
			<summary>If True, the driver queries the instrument status at the end of each method or property that performs I/O to the instrument.  If an error is reported, use ErrorQuery to retrieve error messages one at a time from the instrument.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.RangeCheck">
			<summary>Drivers may choose to always validate some property/parameter values, never validate others, and optionally validate others, to avoid sending invalid commands to the instrument.  If True, the driver performs optional validations.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Simulate">
			<summary>If True, the driver does not perform I/O to the instrument, and returns simulated values for output parameters.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.DriverSetup">
			<summary>Read Only - The driver setup string.  It is either specified in the Configuration Store or passed in the OptionString parameter of the Initialize function.  Driver setup is empty if the driver is not initialized.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.InstrumentManufacturer">
			<summary>Read Only - The name of the manufacturer reported by the physical instrument.  If Simulation is enabled or the instrument is not capable of reporting the name of the manufacturer, a string is returned that explains the condition. Manufacturer is limited to 256 bytes</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.InstrumentModel">
			<summary>Read Only - The model number or name reported by the physical instrument.  If Simulation is enabled or the instrument is not capable of reporting the model number or name, a string is returned that explains the condition.  Model is limited to 256 bytes</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.InstrumentFirmwareRevision">
			<summary>Read Only - The firmware revision reported by the physical instrument.  If Simulation is enabled or the instrument is not capable of reporting the firmware revision, a string is returned that explains the condition.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Identifier">
			<summary>Read Only - The case-sensitive unique identifier of the implementing IVI-COM instrument driver.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.SpecificationMajorVersion">
			<summary>Read Only - For IVI class-compliant drivers, the major version number of the instrument class specification.  If the driver is not class compliant, the driver returns zero.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.SpecificationMinorVersion">
			<summary>Read Only - For IVI class-compliant drivers, the minor version number of the instrument class specification.  If the driver is not class compliant, the driver returns zero.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Description">
			<summary>Read Only - A brief description of the implementing component.  Description is limted to 256 bytes.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Revision">
			<summary>Read Only - The revision of the implementing component.  Refer to IVI 3.1, Section 3.1.2.2, for a description of revision syntax and semantics.  Revision is limited to 256 bytes.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Vendor">
			<summary>Read Only - The name of the vendor that supplies the implementing component. Vendor is limited to 256 bytes.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Acquisition">
			<summary>Pointer to the class-compliant IIviDigitizerAcquistion interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Arm">
			<summary>Pointer to the class-compliant IIviDigitizerArm</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Calibration">
			<summary>Pointer to the class-compliant IIviDigitizerCalibration interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Channels">
			<summary>Pointer to the IIviDigitizerChannels interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.ReferenceOscillator">
			<summary>Pointer to the class-compliant IIviDigitizerReference Oscillator interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.SampleClock">
			<summary>Pointer to the class-compliant IIviDigitizerSampleClock interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Temperature">
			<summary>Pointer to the class-compliant IIviDigitizerTemperature interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Trigger">
			<summary>Pointer to the class-compliant IIviDigitizerTrigger interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.MaxFirstValidPointValue">
			<summary>Returns the maximum value that the First Valid Point parameter of the readout functions may assume. This value is necessary to calculate the minimum size of the required data buffer to retrieved the entire acquisition.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.MaxSamplesPerChannel">
			<summary>Read Only - Returns the maximum number of samples per channel that can be captured.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.MinRecordSize">
			<summary>Read Only - Indicates the minimum waveform record size.  If the digitizer can support any arbitrary size record, then this attribute returns 1.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.NumberOfAcquiredRecords">
			<summary>Read Only - The total number of records acquired since the acquistion was last initiated. You may read the value of this property while an acquisition is in progress.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.NumberOfRecordsToAcquire">
			<summary>The number of waveform records to acquire. One waveform record is acquired for each recognized trigger per active channel.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.RecordSize">
			<summary>Specifies the number of samples to acquire in each waveform record.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.SampleMode">
			<summary>Not Supported - Specifies the sample mode used by the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.SampleRate">
			<summary>Specifies the rate of the sample clock in samples per second.  This number represents the inverse of the interval between samples in the acquisition record.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Status">
			<summary>Pointer to the IIviDigitizerAcquisitionStatus interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.TimeInterleavedChannelListAuto">
			<summary>Specifies whether or not the instrument should automatically combine enabled channels to satisfy user-specified sample rates.  When set to True, the instrument will automatically combine channels to meet the sample rate requirements specified via the Sample Rate attribute.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.IsIdle">
			<summary>Read Only - Returns whether the device is currently in the Idle state.  If the driver cannot query the digitizer to return its state, the driver returns the value Unknown.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.IsMeasuring">
			<summary>Read Only - Returns whether the device is currently in the Measuring state.  If the driver cannot query the digitizer to return its state, the driver returns the value Unknown.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.IsWaitingForArm">
			<summary>Not Supported - Returns whether the device is currently in the Waiting For Arm state.  If the driver cannot query the digitizer to return its state, the driver returns the value Unknown.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.IsWaitingForTrigger">
			<summary>Read Only - Returns whether the device is currently in the Waiting For Trigger state.  If the driver cannot query the digitizer to return its state, the driver returns the value Unknown.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.ActiveSource">
			<summary>Not Supported - Specifies the source the digitizer monitors for the arm event. The value specified here must be one of the valid repeated capability names for the ArmSource repeated capability.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Count">
			<summary>Not Supported - Specifies the number of times the arm has to occur to complete the arm loop; that is, the number of arms that are accepted before the acquisition must be initiated again.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Delay">
			<summary>Not Supported - Specifies the delay from when the arm logic is satisfied until the waiting for trigger state is entered.  The units are seconds.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.MultiArm">
			<summary>Pointer to the class-compliant IIviDigitizerArmMultiArm interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.OutputEnabled">
			<summary>Not Supported - Specifies whether or not an accepted arm appears at an output of the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Sources">
			<summary>Pointer to the IIviDigitizerArmSources interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.SourceList">
			<summary>Not Supported - A comma separated list of source names to be used in a multi arm scenario.  This attribute only affects instrument behavior when the Arm Source Operator attribute is set to AND or OR.  When Arm Source Operator is set to AND, the arm conditions associated with each source in this list must be simultaneously satsified in order to arm the digitizer.  When Arm Source Operator is set to OR, the first arm source in the list that satisfies its arm conditions will arm the digitizer.  Any valid name used for the Arm Source attribute may be used in this list.  An arm source may appear only once in the list.  If a name in the list is not recognized, the driver returns the Unknown Channel Name error.  See IVI-3.2 for the definition of this error.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.SourceOperator">
			<summary>Not Supported - Specifies the boolean operation to apply to the arm sources specified by the Arm Source List attribute.  See the definition of that attribute for details.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.ExternalFrequency">
			<summary>Specifies the frequency of the external signal which is as a frequency reference. This value is used only if the Reference Oscillator Source attribute is set to External. The units are Hertz.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.OutputEnabled">
			<summary>Specifies whether or not the reference frequency signal appears at an output of the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Source">
			<summary>Specifies the reference frequency source used.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.ExternalDivider">
			<summary>Specifies the value by which the external sample clock should be divided.  This value is used only if the Sample Clock Source attribute is set to External.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.ExternalFrequency">
			<summary>Specifies the frequency of the external signal which is as a sample clock. This value is used only if the Sample Clock Source attribute is set to External. The units are Hertz.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.OutputEnabled">
			<summary>Specifies whether or not the sample clock appears at a reference output of the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Source">
			<summary>Specifies the clock used to pace acquisition sampling.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.BoardTemperature">
			<summary>Read Only - Indicates the temperature of the entire board.  The units are governed by the Temperature Units attribute.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Units">
			<summary>Specifies the temperature units returned by the Board Temperature and the Channel Temperature attributes.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.ActiveSource">
			<summary>Specifies the source the digitizer monitors for the trigger event. The value specified here must be one of the valid repeated capability names for the TriggerSource repeated capability.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Delay">
			<summary>Specifies the length of time from the trigger event to the first point in the waveform record. If the value is positive, the first point in the waveform record occurs after the trigger event. If the value is negative, the first point in the waveform record occurs before the trigger event. The units are seconds.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Holdoff">
			<summary>Specifies the length of time the digitizer waits after it detects a trigger until the digitizer enables the trigger subsystem to detect another trigger. The units are seconds. The Trigger Holdoff attribute affects instrument operation only when the digitizer requires multiple acquisitions to build a complete waveform. If Trigger Holdoff and PreTriggerSamples are are both non-zero, then both conditions must be satisfied before the digitizer will accept a trigger.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Modifier">
			<summary>Not Supported - Specifies the trigger modifier. The trigger modifier determines the digitizer's behavior in the absence of the configured trigger.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.MultiTrigger">
			<summary>Pointer to the class-compliant IIviDigitizerMultiTrigger interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.OutputEnabled">
			<summary>Specifies whether or not an accepted trigger appears at an output of the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.PretriggerSamples">
			<summary>Not Supported - Specifies the number of samples that must be collected before a trigger event will be recognized.  The Pretrigger Samples attribute affects instrument operation only when the digitizer requires multiple acquisitions to build a complete waveform.  If Trigger Holdoff and Pretrigger Samples are are both non-zero, then both conditions must be satisfied before the digitizer will accept a trigger.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Sources">
			<summary>Pointer to the IIviDigitizerTriggerSources interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.SourceList">
			<summary>Not Supported - A comma separated list of source names to be used in a multi trigger scenario.  This attribute only affects instrument behavior when the Trigger Source Operator attribute is set to AND or OR.  When Trigger Source Operator is set to AND, the trigger conditions associated with each source in this list must be simultaneously satsified in order to trigger the digitizer.  When Trigger Source Operator is set to OR, the first trigger source in the list that satisfies its trigger conditions will trigger the digitizer.  Any valid name used for the Trigger Source attribute may be used in this list.  A trigger source may appear only once in the list.  If a name in the list is not recognized, the driver returns the Unknown Channel Name error.  See IVI-3.2 for the definition of this error.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.SourceOperator">
			<summary>Not Supported - Specifies the boolean operation to apply to the arm sources specified by the Arm Source List attribute.  See the definition of that attribute for details.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.IOFixedLatencyEnabled">
			<summary>Specifies whether the IO input is propagated to the DPUs with potentially variable latency or with guaranteed fixed latency.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.CountersMode">
			<summary>Specifies the Counters Mode.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.InterSegmentDelayMode">
			<summary>Specifies how the Inter Segment Delay is managed. In Software mode, the Inter Segment Delay is given as a fixed number of blocks, in the Inter Segment Delay Value attribute. In Firmware mode, the Inter Segment Delay is controlled directly by the User Firmware.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.InterSegmentDelayValue">
			<summary>Number of Inter Segments Delay blocks.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.PostTrigger">
			<summary>Number of Post-Trigger blocks.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.PreTrigger">
			<summary>Number of Pre-Trigger blocks.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.TriggerEnableSource">
			<summary>Specifies the Source of the Trigger Enable, either from the Segmentation mechanism, or from the User Firmware.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.TriggerFactor">
			<summary>Multiplicative factor for the PreTrigger and PostTrigger values, to be used with downsampling. Default value 1.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.TriggerSelection">
			<summary>Specifies the source of the Trigger, either from the analog circuitry, or from the digital user firmware.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.StartOnTriggerEnabled">
			<summary>Specifies whether the segmentation mechanism should work in Start On Trigger mode, or not. While in Start On Trigger mode, the PreTrigger value is ignored.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.UserControl">
			<summary>Pointer to the IAqMD3AcquisitionUserControl interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.NumberOfAverages">
			<summary>Specifies the number of waveforms to average in the record. This attribute affects instrument behavior only when the Acquisition Mode attribute is set to Averager or PeakDetection.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Enabled">
			<summary>Specifies whether TSR operation is enabled on the instrument.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.IsAcquisitionComplete">
			<summary>Read Only - Indicates if a (single- or multi-record) waveform can be fetched from the instrument. Applicable only when TSR operation is enabled.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.MemoryOverflowOccurred">
			<summary>Read Only - Indicates that no memory segment was available to acquire new data. The instrument could therefore not accept any new triggers, and some may have been missed.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.TSR">
			<summary>Pointer to the IAqMD3AcquisitionTSR interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.MaxSamplesPerChannel">
			<summary>Read Only - Returns the maximum number of samples per channel that can be captured.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.NumberOfAcquiredRecords">
			<summary>Read Only - The total number of records acquired since the acquistion was last initiated. You may read the value of this property while an acquisition is in progress.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.SampleRate">
			<summary>Specifies the rate of the sample clock in samples per second.  This number represents the inverse of the interval between samples in the acquisition record.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.TimeInterleavedChannelListAuto">
			<summary>Specifies whether or not the instrument should automatically combine enabled channels to satisfy user-specified sample rates.  When set to True, the instrument will automatically combine channels to meet the sample rate requirements specified via the Sample Rate attribute.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.MinRecordSize">
			<summary>Read Only - Indicates the minimum waveform record size.  If the digitizer can support any arbitrary size record, then this attribute returns 1.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.RecordSize">
			<summary>Specifies the number of samples to acquire in each waveform record.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.NumberOfRecordsToAcquire">
			<summary>The number of waveform records to acquire. One waveform record is acquired for each recognized trigger per active channel.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.IsIdle">
			<summary>Read Only - Returns whether the device is currently in the Idle state.  If the driver cannot query the digitizer to return its state, the driver returns the value Unknown.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.IsMeasuring">
			<summary>Read Only - Returns whether the device is currently in the Measuring state.  If the driver cannot query the digitizer to return its state, the driver returns the value Unknown.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.IsWaitingForTrigger">
			<summary>Read Only - Returns whether the device is currently in the Waiting For Trigger state.  If the driver cannot query the digitizer to return its state, the driver returns the value Unknown.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Status">
			<summary>Pointer to the IAqMD3AcquisitionStatus interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.MaxFirstValidPointValue">
			<summary>Read Only - Returns the maximum value that the First Valid Point parameter of the readout functions may assume. This value is necessary to calculate the minimum size of the required data buffer to retrieved the entire acquisition.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Mode">
			<summary>The acquisition mode.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Acquisition">
			<summary>Pointer to the IAqMD3Acquistion interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Streams">
			<summary>Pointer to the IAqMD3Streams interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.UserSignal">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.PrivateCalibration">
			<summary>This interface is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.PrivateFirmwares">
			<summary>This interface is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.PrivateStores">
			<summary>This interface is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.PrivateAccessPassword">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Private">
			<summary>This interface is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Channels">
			<summary>Pointer to the IAqMD3Channels interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Sources">
			<summary>Pointer to the IAqMD3TriggerSources interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Holdoff">
			<summary>Specifies the length of time the digitizer waits after it detects a trigger until the digitizer enables the trigger subsystem to detect another trigger. The units are seconds. The Trigger Holdoff attribute affects instrument operation only when the digitizer requires multiple acquisitions to build a complete waveform. If Trigger Holdoff and PreTriggerSamples are are both non-zero, then both conditions must be satisfied before the digitizer will accept a trigger.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.ActiveSource">
			<summary>Specifies the source the digitizer monitors for the trigger event. The value specified here must be one of the valid repeated capability names for the TriggerSource repeated capability.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Delay">
			<summary>Specifies the length of time from the trigger event to the first point in the waveform record. If the value is positive, the first point in the waveform record occurs after the trigger event. If the value is negative, the first point in the waveform record occurs before the trigger event. The units are seconds.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.OutputEnabled">
			<summary>Specifies whether or not an accepted trigger appears at an output of the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Offset">
			<summary>Specifies the offset in Volts at the trigger output of the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Enabled">
			<summary>Specifies whether or not an accepted trigger appears at an output of the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Source">
			<summary>Select the trigger signal to drive the trigger output connector on the front panel.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Output">
			<summary>Pointer to the IAqMD3TriggerOutput interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Trigger">
			<summary>Pointer to the IAqMD3Trigger interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.LogicDevices">
			<summary>Pointer to the IAqMD3LogicDevices interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.IsRequired">
			<summary>Read Only - Returns whether or not a self calibration is required.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Calibration">
			<summary>Pointer to the IAqMD3Calibration interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Units">
			<summary>Specifies the temperature units returned by the Board Temperature and the Channel Temperature attributes.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.BoardTemperature">
			<summary>Read Only - Indicates the temperature of the entire board.  The units are governed by the Temperature Units attribute.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Temperature">
			<summary>Pointer to the IAqMD3Temperature interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Source">
			<summary>Specifies the reference frequency source used.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.ExternalFrequency">
			<summary>Specifies the frequency of the external signal which is as a frequency reference. This value is used only if the Reference Oscillator Source attribute is set to External. The units are Hertz.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.OutputEnabled">
			<summary>Specifies whether or not the reference frequency signal appears at an output of the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.ReferenceOscillator">
			<summary>Pointer to the IAqMD3ReferenceOscillator interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Source">
			<summary>Specifies the clock used to pace acquisition sampling.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.ExternalFrequency">
			<summary>Specifies the frequency of the external signal which is as a sample clock. This value is used only if the Sample Clock Source attribute is set to External. The units are Hertz.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.OutputEnabled">
			<summary>Specifies whether or not the sample clock appears at a reference output of the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.ExternalDivider">
			<summary>Specifies the value by which the external sample clock should be divided.  This value is used only if the Sample Clock Source attribute is set to External.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.SampleClock">
			<summary>Pointer to the IAqMD3SampleClock interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.ControlIOs">
			<summary>Pointer to the IAqMD3ControlIOs interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.SerialNumberString">
			<summary>Read Only - The serial number of the instrument.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.IOVersion">
			<summary>Read Only - Version of the IO Driver used by this module.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.ChassisNumber">
			<summary>Read Only - Chassis number.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.NbrADCBits">
			<summary>Read Only - Number of bits of data per sample from this module's ADCs.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Options">
			<summary>Read Only - Comma separated list of options installed in this instrument.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.MonitoringValues">
			<summary>Pointer to the IAqMD3MonitoringValues interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.InstrumentInfo">
			<summary>General instrument information interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.DownconversionDataScalingEnabled">
			<summary>Enable or disable the factor 2 scaling of downconversion data. This scaling factor can be used to return the true input signal power of single side band signal resulting from the data downconversion with tuning. The scaling is disabled by default.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.DDCCores">
			<summary>Reference to the IAqMD3DDCCoreCollection interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Equalization">
			<summary>Parameter for self-calibration equalization.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.ErrorOnOverrangeEnabled">
			<summary>When set to true, all Fetch and Read methods will return an error if the ADC was in overrange (i.e. some samples are outside of the numeric range of the ADC output).</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.ConnectorToUserCoreLatency">
			<summary>Returns the duration between the time the signal is present on a connector, and the time the corresponding sample enters the user core.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Streaming">
			<summary>Reference to the IAqMD3AcquisitionStreaming interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Mode">
			<summary>The Streaming Mode is set to Disabled for regular digitizer operation. It can be set to Continuous for CSR enabled instruments. It can be set to Triggered for CST enabled instruments.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.TargetVoltageEnabled">
			<summary>When set to true, the self-calibration will minimize the noise level at the channel input value equal to Channel.CalibrationTargetVoltage. Note that when set to true, the Channel.Offset value is taken into account in the self-calibration, and therefore changing the Channel.CalibrationTargetVoltage value, or changing the Channel.Offset, will require a new self-calibration.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.DataReductionMode">
			<summary>The data reduction mode.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.ResetMode">
			<summary>Specifies how the instrument time is reset.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Time">
			<summary>The current time on the instrument.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.TimeReference">
			<summary>Reference to the IAqMD3TimeReference interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.PrivateCalibrationSteps">
			<summary>This interface is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.DigitalOut">
			<summary>Reference to the IAqMD3DigitalOut interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.StartSource">
			<summary>Specify the source that triggers digital output generation.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.Outputs">
			<summary>Reference to the IAqMD3DigitalOutputCollection interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3.InterChannelDelayEnabled">
			<summary>When set to true, the self-calibration will minimize the sampling delay between channels.</summary>
		</member>
		<member name="E:Acqiris.AqMD3.AqMD3.Warning">
			<summary>Warning event.</summary>
		</member>
		<member name="E:Acqiris.AqMD3.AqMD3.Coercion">
			<summary>Coercion record event.</summary>
		</member>
		<member name="E:Acqiris.AqMD3.AqMD3.InterchangeCheckWarning">
			<summary>Interchange check warning event.</summary>
		</member>
		<member name="T:MindWorks.Nimbus.DriverNode">
			<summary />
		</member>
		<member name="T:MindWorks.Nimbus.Driver">
			<summary />
		</member>
		<member name="T:MindWorks.Nimbus.RepCap">
			<summary />
		</member>
		<member name="T:MindWorks.Nimbus.RepCapCollection">
			<summary />
		</member>
		<member name="T:MindWorks.Nimbus.RepCapCollection`1">
			<summary />
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3Channel">
			<summary>Root class for the Channel repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.Configure(System.Double,System.Double,Ivi.Digitizer.VerticalCoupling,System.Boolean)">
			<summary>This function configures the most commonly configured attributes of the digitizer channel sub-system. These attributes are the range, offset, coupling, probe attenuation, and whether the channel is enabled.</summary>
			<param name="range">Specifies the vertical range. This value sets the Vertical Range property.</param>
			<param name="offset">Specifies the vertical offset. This value sets the Vertical Offset property.</param>
			<param name="coupling">Specifies how to couple the input signal. This value sets the Vertical Coupling property.</param>
			<param name="enabled">Specifies if the channel is enabled for acquisition. This value sets the Channel Enabled property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.Configure(System.Boolean,System.Double)">
			<summary>Not Supported - Configures how the digitizer performs downconversion.</summary>
			<param name="enabled">Enables or disables downversion. The driver uses this value to set the Downconversion Enabled property. See the property description for more details.</param>
			<param name="centerFrequency">Specifies the center frequency, in Hz, from which the digitizer should downconvert. The driver uses this value to set the Downconversion Center Frequency property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.Configure(System.Double,System.Double)">
			<summary>This function is used to configure the minimum and maximum input filter frequencies for a specified channel.</summary>
			<param name="minFrequency">Specifies the minimum input filter frequency. This value sets the Input Filter Min Frequency property.</param>
			<param name="maxFrequency">Specifies the maximum input filter frequency. This value sets the Input Filter Max Frequency property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchWaveform(Ivi.Driver.IWaveform`1)">
			<summary>Returns the waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns>A waveform object containing the measurement data.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchWaveform(Ivi.Driver.IWaveform`1)">
			<summary>Returns the waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns>A waveform object containing the measurement data.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchWaveform(Ivi.Driver.IWaveform`1)">
			<summary>Returns the waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns>A waveform object containing the measurement data.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchWaveform(Ivi.Driver.IWaveform`1)">
			<summary>Returns the waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns>A waveform object containing the measurement data.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.ReadWaveform(Ivi.Driver.PrecisionTimeSpan,Ivi.Driver.IWaveform`1)">
			<summary>Initiates an acquisition on the channels that the end-user configures with the ConfigureChannel method.</summary>
			<param name="maximumTime">Specifies the maximum time the end-user allows for this method to complete.</param>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns>A waveform object containing the measurement data.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.ReadWaveform(Ivi.Driver.PrecisionTimeSpan,Ivi.Driver.IWaveform`1)">
			<summary>Initiates an acquisition on the channels that the end-user configures with the ConfigureChannel method.</summary>
			<param name="maximumTime">Specifies the maximum time the end-user allows for this method to complete.</param>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns>A waveform object containing the measurement data.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.ReadWaveform(Ivi.Driver.PrecisionTimeSpan,Ivi.Driver.IWaveform`1)">
			<summary>Initiates an acquisition on the channels that the end-user configures with the ConfigureChannel method.</summary>
			<param name="maximumTime">Specifies the maximum time the end-user allows for this method to complete.</param>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns>A waveform object containing the measurement data.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.ReadWaveform(Ivi.Driver.PrecisionTimeSpan,Ivi.Driver.IWaveform`1)">
			<summary>Initiates an acquisition on the channels that the end-user configures with the ConfigureChannel method.</summary>
			<param name="maximumTime">Specifies the maximum time the end-user allows for this method to complete.</param>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns>A waveform object containing the measurement data.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchMultiRecordWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Ivi.Digitizer.IWaveformCollection`1)">
			<summary>Returns the (multi-record) waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads.</param>
			<returns>A waveform collection object with data from the channel.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchMultiRecordWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Ivi.Digitizer.IWaveformCollection`1)">
			<summary>Returns the (multi-record) waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads.</param>
			<returns>A waveform collection object with data from the channel.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchMultiRecordWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Ivi.Digitizer.IWaveformCollection`1)">
			<summary>Returns the (multi-record) waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads.</param>
			<returns>A waveform collection object with data from the channel.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchMultiRecordWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Ivi.Digitizer.IWaveformCollection`1)">
			<summary>Returns the (multi-record) waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads.</param>
			<returns>A waveform collection object with data from the channel.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.Configure(System.Boolean,System.Int32,System.Int32)">
			<summary>Configures the Noise Suppressed Accumulation properties.</summary>
			<param name="enabled">Specifies whether the Noise Suppressed Accumulation is active. This value sets the Enabled property.</param>
			<param name="threshold">Specifies the threshold of the Noise Suppressed Accumulation. Each data value must exceed the threshold value to be entered into the sum. The units are ADC counts. This value sets the Threshold property.</param>
			<param name="noiseBase">Specifies the noise base value for the Noise Suppressed Accumulation. The noise base is subtracted from data values which are higher than the configured threshold. The units are ADC counts. This value sets the Noise Base property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.Configure(Acqiris.AqMD3.BaselineCorrectionMode,System.Int32,System.Int32,System.Int32)">
			<summary>Configures the baseline correction properties.</summary>
			<param name="mode">Defines the mode used during baseline correction accumulation. This value sets the Mode property.</param>
			<param name="thresholdHigh">Defines the higher limit of the baseline range. Outside of this range, data values will be ignored. This is an absolute value (from 0 to vertical range). The units are ADC counts. This value sets the ThresholdHigh property.</param>
			<param name="thresholdLow">Defines the lower limit of the baseline range. Outside of this range, data values will be ignored. This is an absolute value (from 0 to vertical range). The units are ADC counts. This value sets the ThresholdLow property.</param>
			<param name="digitalOffset">Applies a digital offset after the baseline correction. This value sets the DigitalOffset property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.Configure(System.Int32,System.Int32,System.Boolean)">
			<summary>Configures the Peak Detection properties.</summary>
			<param name="risingDelta">Defines the amount by which two consecutive samples must differ to be considered as rising edge in the peak detector algorithm. The units are ADC counts. This value sets the Rising Delta property.</param>
			<param name="fallingDelta">Defines the amount by which two consecutive samples must differ to be considered as falling edge in the peak detector algorithm. The units are ADC counts. This value sets the Falling Delta property.</param>
			<param name="amplitudeAccumulationEnabled">Selects whether the amplitude value of the peak (in ADC counts) should be accumulated instead of the fixed value 1 during a peak detection. This value sets the Amplitude Accumulation Enabled property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.Configure(System.Double,System.Double,Acqiris.AqMD3.VerticalCoupling,System.Boolean)">
			<summary>This function configures the most commonly configured attributes of the digitizer channel sub-system. These attributes are the range, offset, coupling, probe attenuation, and whether the channel is enabled.</summary>
			<param name="range">Specifies the vertical range. This value sets the Vertical Range property.</param>
			<param name="offset">Specifies the vertical offset. This value sets the Vertical Offset property.</param>
			<param name="coupling">Specifies how to couple the input signal. This value sets the Vertical Coupling property.</param>
			<param name="enabled">Specifies if the channel is enabled for acquisition. This value sets the Channel Enabled property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.Configure(System.Double,System.Double)">
			<summary>This function is used to configure the minimum and maximum input filter frequencies for a specified channel.</summary>
			<param name="minFrequency">Specifies the minimum input filter frequency.  This value sets the Input Filter Min Frequency attribute.  See the attribute description for more details.</param>
			<param name="maxFrequency">Specifies the maximum input filter frequency.  This value sets the Input Filter Max Frequency attribute.  See the attribute description for more details.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchWaveform(Ivi.Driver.IWaveform`1)">
			<summary>Returns the waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchWaveform(Ivi.Driver.IWaveform`1)">
			<summary>Returns the waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchWaveform(Ivi.Driver.IWaveform`1)">
			<summary>Returns the waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchWaveform(Ivi.Driver.IWaveform`1)">
			<summary>Returns the waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.ReadWaveform(Ivi.Driver.PrecisionTimeSpan,Ivi.Driver.IWaveform`1)">
			<summary>Initiates an acquisition on the channels that the end-user configures with the ConfigureChannel method.</summary>
			<param name="maximumTime">Specifies the maximum time the end-user allows for this method to complete.</param>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.ReadWaveform(Ivi.Driver.PrecisionTimeSpan,Ivi.Driver.IWaveform`1)">
			<summary>Initiates an acquisition on the channels that the end-user configures with the ConfigureChannel method.</summary>
			<param name="maximumTime">Specifies the maximum time the end-user allows for this method to complete.</param>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.ReadWaveform(Ivi.Driver.PrecisionTimeSpan,Ivi.Driver.IWaveform`1)">
			<summary>Initiates an acquisition on the channels that the end-user configures with the ConfigureChannel method.</summary>
			<param name="maximumTime">Specifies the maximum time the end-user allows for this method to complete.</param>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.ReadWaveform(Ivi.Driver.PrecisionTimeSpan,Ivi.Driver.IWaveform`1)">
			<summary>Initiates an acquisition on the channels that the end-user configures with the ConfigureChannel method.</summary>
			<param name="maximumTime">Specifies the maximum time the end-user allows for this method to complete.</param>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchMultiRecordWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Ivi.Digitizer.IWaveformCollection`1)">
			<summary>Returns the (multi-record) waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads. The waveform collection memory may be allocated before calling this method, or during the call to this method. To allocate memory before calling this method, create a waveform collection object using the Create Waveform Collection method and set the waveforms parameter to that waveform collection. To allocate memory during the call to this method, set the waveforms parameter to (IWaveformCollection&lt;Double&gt;)null. Note that this is critically different than setting waveforms to null, which generates a build error.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchMultiRecordWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Ivi.Digitizer.IWaveformCollection`1)">
			<summary>Returns the (multi-record) waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads. The waveform collection memory may be allocated before calling this method, or during the call to this method. To allocate memory before calling this method, create a waveform collection object using the Create Waveform Collection method and set the waveforms parameter to that waveform collection. To allocate memory during the call to this method, set the waveforms parameter to (IWaveformCollection&lt;Int16&gt;)null. Note that this is critically different than setting waveforms to null, which generates a build error.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchMultiRecordWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Ivi.Digitizer.IWaveformCollection`1)">
			<summary>Returns the (multi-record) waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads. The waveform collection memory may be allocated before calling this method, or during the call to this method. To allocate memory before calling this method, create a waveform collection object using the Create Waveform Collection method and set the waveforms parameter to that waveform collection. To allocate memory during the call to this method, set the waveforms parameter to (IWaveformCollection&lt;Int32&gt;)null. Note that this is critically different than setting waveforms to null, which generates a build error.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchMultiRecordWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Ivi.Digitizer.IWaveformCollection`1)">
			<summary>Returns the (multi-record) waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads. The waveform collection memory may be allocated before calling this method, or during the call to this method. To allocate memory before calling this method, create a waveform collection object using the Create Waveform Collection method and set the waveforms parameter to that waveform collection. To allocate memory during the call to this method, set the waveforms parameter to (IWaveformCollection&lt;SByte&gt;)null. Note that this is critically different than setting waveforms to null, which generates a build error.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchAccumulatedWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Acqiris.AqMD3.IAqMD3AccumulatedWaveformCollection`1)">
			<summary />
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return. This number may be larger than the amount of data available.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads. The waveform collection memory may be allocated before calling this method, or during the call to this method. To allocate memory before calling this method, create a waveform collection object using the Create Waveform Collection method and set the waveforms parameter to that waveform collection. To allocate memory during the call to this method, set the waveforms parameter to (IWaveformCollection&lt;Int32&gt;)null. Note that this is critically different than setting waveforms to null, which generates a build error.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.FetchAccumulatedWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Acqiris.AqMD3.IAqMD3AccumulatedWaveformCollection`1)">
			<summary />
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return. This number may be larger than the amount of data available.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads. The waveform collection memory may be allocated before calling this method, or during the call to this method. To allocate memory before calling this method, create a waveform collection object using the Create Waveform Collection method and set the waveforms parameter to that waveform collection. To allocate memory during the call to this method, set the waveforms parameter to (IWaveformCollection&lt;Double&gt;)null. Note that this is critically different than setting waveforms to null, which generates a build error.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Channel.Configure(Acqiris.AqMD3.BaselineCorrectionMode,System.Int32,Acqiris.AqMD3.BaselineCorrectionPulsePolarity,System.Int32)">
			<summary>Configures the baseline correction properties.</summary>
			<param name="mode">Defines the mode used during baseline correction. This value sets the Mode property.</param>
			<param name="pulseThreshold">Baseline pulse detection threshold, as signed left-aligned 16-bit ADC code. This value sets the PulseThreshold property.</param>
			<param name="pulsePolarity">Defines pulse polarity for baseline correction. This value sets the PulsePolarity property.</param>
			<param name="offset">Applies a digital offset after the baseline correction. Offset is a signed left-aligned 16-bit ADC code. This value sets the DigitalOffset property.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Coupling">
			<summary>Specifies how the digitizer couples the input signal for the channel.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.DataInterleavedChannelList">
			<summary>Not Supported - This attribute is used to combine this channel with one or more other channels to interleave the returned data. The string provided here specifies which channels should operate in combined mode with the current channel.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Downconversion">
			<summary>Pointer to the IIviDigitizerDownconversion interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Enabled">
			<summary>Specifies whether the digitizer acquires a waveform for the channel.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Filter">
			<summary>Pointer to the IIviDigitizerFilterinterface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.InputConnectorSelection">
			<summary>Some digitizers include multiple connectors for each digitizer input channel.  These connectors are often simply a matter of convenience for system cabling ? multiple signals can be routed to the various connectors, the the desired signal can be sent into the digitizer by changing an internal switch.  With other digitizers, the connectors may be of different types or even different impedances.  This attribute is used to determine which connector is to be used.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.InputImpedance">
			<summary>The input impedance of this channel.  The units are Ohms.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Measurement">
			<summary>Pointer to the class-compliant IIviDigitizerChannelMeasurement interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.MultiRecordMeasurement">
			<summary>Pointer to the IIviDigitizerChannelMultiRecordMeasurement interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Offset">
			<summary>The location of the center of the range that you specify with the Range attribute.  The units are Volts, with respect to ground.  For example, to acquire a sine wave spanning 0.0 to 10.0 volts, set Offset to 5.0 volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Range">
			<summary>The absolute value of the input range the digitizer can acquire for the channel.  The units are Volts.  For example, to acquire a sine wave spanning -5.0 to 5.0 volts, set Range to 10.0 volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Temperature">
			<summary>Read Only - Indicates the temperature of the channel.  The units are governed by the Temperature Units attribute.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.TimeInterleavedChannelList">
			<summary>This attribute is used to combine this channel with one or more other channels to achieve higher effective sampling rates and/or greater memory depth.  The string provided here specifies which channels should operate in combined mode with the current channel.  This attribute is a comma-separated list of one or more channel names.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Name">
			<summary>The repeated capability physical identifier.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.CenterFrequency">
			<summary>Not Supported - Specifies the center frequency, in Hz, from which the digitizer should downconvert.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Enabled">
			<summary>Not Supported - Enables or disables downconversion.  When enabled, the Read and Fetch functions return data according to the setting of the Fetch IQ Interleaved Data attribute.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.IQInterleaved">
			<summary>Not Supported - Controls how the Read and Fetch functions return data when downconversion is enabled.  When this attribute is True and downconversion is enabled, the data returned from the Read and Fetch functions is interleaved I-Q data points.  When this attribute is False and downconversion is enabled, the Read and Fetch functions return data with all I data points in sequence followed by all Q data points.  This attribute has no effect when the Downconversion Enabled attribute is False.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Bypass">
			<summary>Specifies whether or not to bypass the input filter.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.MaxFrequency">
			<summary>Specifies the maximum input filter frequency.  Specifying a value of zero means that the device should be set to the full bandwidth that the filter can deliver without being bypassed.  The units are Hertz.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.MinFrequency">
			<summary>Specifies the minimum input filter frequency.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.DataInversionEnabled">
			<summary>Specifies whether the data acquired is inverted.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Enabled">
			<summary>Specifies whether the Noise Suppressed Accumulation is active. This attribute affects instrument behavior only when the Acquisition Mode attribute is set to Averager.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.NoiseBase">
			<summary>Specifies the noise base value for the Noise Suppressed Accumulation. The noise base is subtracted from data values which are higher than the configured threshold. The units are ADC counts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Threshold">
			<summary>Specifies the threshold of the Noise Suppressed Accumulation. Each data value must exceed the threshold value to be entered into the sum. The units are ADC counts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.NSA">
			<summary>Pointer to the IAqMD3ChannelAccumulationNSA interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Mode">
			<summary>Defines the mode used during baseline correction accumulation.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.ThresholdHigh">
			<summary>Defines the higher limit of the baseline range. Outside of this range, data values will be ignored. This is an absolute value (from 0 to vertical range). The units are ADC counts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.ThresholdLow">
			<summary>Defines the lower limit of the baseline range. Outside of this range, data values will be ignored. This is an absolute value (from 0 to vertical range). The units are ADC counts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.DigitalOffset">
			<summary>Applies a digital offset after the baseline correction.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.BaselineCorrection">
			<summary>Pointer to the IAqMD3ChannelAccumulationBaselineCorrection interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Accumulation">
			<summary>Pointer to the IAqMD3ChannelAccumulation interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.RisingDelta">
			<summary>Defines the amount by which two consecutive samples must differ to be considered as rising edge in the peak detector algorithm. The units are ADC counts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.FallingDelta">
			<summary>Defines the amount by which two consecutive samples must differ to be considered as falling edge in the peak detector algorithm. The units are ADC counts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.AmplitudeAccumulationEnabled">
			<summary>Selects whether the amplitude value of the peak (in ADC counts) should be accumulated instead of a fixed value of 1 for a detected peak.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.PeakDetection">
			<summary>Pointer to the IAqMD3ChannelPeakDetection interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Measurement">
			<summary>Pointer to the IAqMD3ChannelMeasurement interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Coupling">
			<summary>Specifies how the digitizer couples the input signal for the channel.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.InputImpedance">
			<summary>The input impedance of this channel.  The units are Ohms.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Range">
			<summary>The absolute value of the input range the digitizer can acquire for the channel.  The units are Volts.  For example, to acquire a sine wave spanning -5.0 to 5.0 volts, set Range to 10.0 volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Offset">
			<summary>The location of the center of the range that you specify with the Range attribute.  The units are Volts, with respect to ground.  For example, to acquire a sine wave spanning 0.0 to 10.0 volts, set Offset to 5.0 volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.MaxFrequency">
			<summary>Specifies the maximum input filter frequency.  Specifying a value of zero means that the device should be set to the full bandwidth that the filter can deliver without being bypassed.  The units are Hertz.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.MinFrequency">
			<summary>Specifies the minimum input filter frequency.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Bypass">
			<summary>Specifies whether or not to bypass the input filter.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Filter">
			<summary>Pointer to the IAqMD3ChannelFilter interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Enabled">
			<summary>Specifies whether the digitizer acquires a waveform for the channel.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Temperature">
			<summary>Read Only - Indicates the temperature of the channel.  The units are governed by the Temperature Units attribute.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.TimeInterleavedChannelList">
			<summary>This attribute is used to combine this channel with one or more other channels to achieve higher effective sampling rates and/or greater memory depth.  The string provided here specifies which channels should operate in combined mode with the current channel.  This attribute is a comma-separated list of one or more channel names.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.InputConnectorSelection">
			<summary>Some digitizers include multiple connectors for each digitizer input channel.  These connectors are often simply a matter of convenience for system cabling ? multiple signals can be routed to the various connectors, the the desired signal can be sent into the digitizer by changing an internal switch.  With other digitizers, the connectors may be of different types or even different impedances.  This attribute is used to determine which connector is to be used.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.MultiRecordMeasurement">
			<summary>Pointer to the IAqMD3ChannelMultiRecordMeasurement interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.ConnectorName">
			<summary>Read Only - The connector name as it appears on the instrument's front panel.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.CalibrationTargetVoltage">
			<summary>The value of CalibrationTargetVoltage is the channel input level at which the noise level will be minimized by the self-calibration. This value is only used if the property Calibration.TargetVoltageEnabled is true. The units are Volts. Note that when Calibration.TargetVoltageEnabled is set to true, changing this value, or changing the Channel.Offset, will require a new self-calibration.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.BaselineCorrection">
			<summary>Reference to the IAqMD3ChannelBaselineCorrection interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Mode">
			<summary>Defines the mode used during baseline correction.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.DigitalOffset">
			<summary>Applies a digital offset after the baseline correction. DigitalOffset is a signed left-aligned 16-bit ADC code.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.PulsePolarity">
			<summary>Defines pulse polarity for baseline correction.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.PulseThreshold">
			<summary>Baseline pulse detection threshold, as signed left-aligned 16-bit ADC code.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.ZeroSuppress">
			<summary>Reference to the IAqMD3ChannelZeroSuppress interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Threshold">
			<summary>In ZeroSuppress DataReduction mode, the total amount of data recorded is reduced by eliminating samples below the level of interest: Threshold. The value is specified as a signed left-aligned 16-bit ADC code (Normal acquisition mode) or a signed 32-bit value (Averager acquisition mode).</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Hysteresis">
			<summary>Specifies the hysteresis width.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.ZeroValue">
			<summary>In ZeroSuppress DataReduction mode, the value used to replace suppressed samples in a standard waveform construct. It is a signed left-aligned 16-bit ADC code (Normal acquisition mode) or a signed 32-bit value (Averager acquisition mode).</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.PreGateSamples">
			<summary>Specifies the number of samples to be kept before gate start condition.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.PostGateSamples">
			<summary>Specifies the number of samples to be kept after gate stop condition.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.PeakList">
			<summary>Reference to the IAqMD3ChannelPeakList interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.ValueSmoothingLength">
			<summary>Value smoothing length. It determines the length of the smoothing filter that applies to sample values.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.DerivativeSmoothingLength">
			<summary>Derivative smoothing length. It determines the length of the smoothing filter that applies to samples' derivative values.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.PulseValueThreshold">
			<summary>Pulse value threshold specifies data threshold for pulse detection. A rising edge of a pulse is detected when sample values exceed the configured threshold (the sample value's derivative must also exceed the derivative threshold rising).</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.PulseDerivativeThresholdRising">
			<summary>Pulse derivative threshold rising is used for pulse detection. The rising edge of a pulse is detected when the sample values' derivative goes above the configured rise threshold.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.PulseDerivativeThresholdFalling">
			<summary>Pulse derivative threshold falling is used for pulse detection. Falling edge is detected when the sample values' derivative goes below the configured fall threshold minus the configured derivative threshold hysteresis.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.PulseDerivativeHysteresis">
			<summary>Pulse derivative hysteresis width.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.Baseline">
			<summary>Pulse value baseline. It is used for the computation of the following pulse characteristics: sum-of-squares &amp; center-of-mass.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.DataStorageMode">
			<summary>Selects data storage mode for PeakList acquisition mode.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.BypassAntiAliasing">
			<summary>Specifies whether or not to bypass the anti-aliasing input filter. BypassMovingAverage and BypassAntiAliasing cannot be both False at the same time.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.DescriptorFormat">
			<summary>Specifies the format of PeakList descriptors.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.ObservationWindowDelay">
			<summary>Specifies the delay, in samples, of the observation window start with respect to the beginning of the record.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.ObservationWindowWidth">
			<summary>Specifies the width, in samples, of the observation window.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.ObservationWindowEnabled">
			<summary>Specifies whether the observation window is enabled.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.ObservationWindowGranularity">
			<summary>Specifies the granularity, in samples, of observation window Delay and Width parameters.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.BypassMovingAverage">
			<summary>Specifies whether or not to bypass the moving average input filter. BypassMovingAverage and BypassAntiAliasing cannot be both False at the same time.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Channel.SamplingDelay">
			<summary>The delay in seconds at which the sample is acquired from the input signal, compared to other channels.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3ChannelCollection">
			<summary>Collection class for the Channel repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3ChannelCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3ChannelCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3ChannelCollection.GetEnumerator">
			<summary />
			<returns />
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ChannelCollection.Item(System.String)">
			<summary>Returns an interface pointer which can be used to control the attributes and other functionality of the repeated capability instance identified by the specified physical name.</summary>
			<param name="name">The repeated capability physical identifier.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ChannelCollection.Item(System.String)">
			<summary>Returns an interface pointer which can be used to control the attributes and other functionality of the repeated capability instance identified by the specified physical name.</summary>
			<param name="name">The repeated capability physical identifier.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ChannelCollection.Count">
			<summary>The number of repeated capability instances.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ChannelCollection.Count">
			<summary>The number of repeated capability instances.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3TriggerSource">
			<summary>Root class for the TriggerSource repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3TriggerSource.Configure(System.Double,Ivi.Digitizer.Slope)">
			<summary>This function sets the edge triggering attributes. An edge trigger occurs when the trigger signal that the end-user specifies with the Source parameter passes through the voltage threshold that the end-user specifies with the level parameter and has the slope that the end-user specifies with the Slope parameter.  This function affects instrument behavior only if the Trigger Type is Edge Trigger. Set the Trigger Type and Trigger Coupling before calling this function.  If the trigger source is one of the analog input channels, an application program should configure the vertical range, vertical coupling, probe attenuation, and the maximum input frequency before calling this function.</summary>
			<param name="level">Specifies the trigger level. This value sets the Trigger Level property.</param>
			<param name="slope">Specifies the trigger slope. This value sets the Trigger Slope property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3TriggerSource.Configure(System.Double,Ivi.Driver.PrecisionTimeSpan,Ivi.Digitizer.GlitchPolarity,Ivi.Digitizer.GlitchCondition)">
			<summary>Not Supported - This function configures the glitch trigger. A glitch trigger occurs when the trigger signal has a pulse with a width that is less than or greater than the glitch width. The end user specifies which comparison criterion to use with the GlitchCondition parameter. The end-user specifies the glitch width with the GlitchWidth parameter. The end-user specifies the polarity of the pulse with the GlitchPolarity parameter. The trigger does not actually occur until the edge of a pulse that corresponds to the GlitchWidth and GlitchPolarity crosses the threshold the end-user specifies in the TriggerLevel parameter.  This function affects instrument behavior only if the trigger type is Glitch Trigger. Set the trigger type and trigger coupling before calling this function.</summary>
			<param name="level">The trigger level. This value sets the Trigger Level property.</param>
			<param name="width">The glitch width. This value sets the Glitch Width property.</param>
			<param name="polarity">The glitch polarity. This value sets the Glitch Polarity property.</param>
			<param name="condition">The glitch condition. This value sets the Glitch Condition property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3TriggerSource.Configure(System.Double,System.Double,Ivi.Digitizer.RuntPolarity)">
			<summary>Not Supported - This function configures the runt trigger. A runt trigger occurs when the trigger signal crosses one of the runt thresholds twice without crossing the other runt threshold. The end-user specifies the runt thresholds with the RuntLowThreshold and RuntHighThreshold parameters. The end-user specifies the polarity of the runt with the RuntPolarity parameter.  This function affects instrument behavior only if the trigger type is Runt Trigger. Set the trigger type and trigger coupling before calling this function.</summary>
			<param name="thresholdLow">The runt triggering low threshold. This value sets the TriggerRunt ThresholdLow property.</param>
			<param name="thresholdHigh">The runt triggering high threshold. This value sets the TriggerRunt ThresholdHigh property.</param>
			<param name="polarity">The runt triggering polarity. This value sets the TriggerRunt Polarity property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3TriggerSource.Configure(Ivi.Digitizer.TVSignalFormat,Ivi.Digitizer.TVTriggerEvent,Ivi.Digitizer.TVTriggerPolarity)">
			<summary>Not Supported - This function configures the digitizer for TV triggering. It configures the TV signal format, the event and the signal polarity.  This function affects instrument behavior only if the trigger type is TV Trigger. Set the Trigger Type and Trigger Coupling before calling this function.</summary>
			<param name="signalFormat">Specifies the TV trigger signal format. This value sets the TV Trigger Signal Format property.</param>
			<param name="triggerEvent">Specifies the TV trigger event. This value sets the TV Trigger Event property.</param>
			<param name="polarity">Specifies the polarity of the TV trigger. This value sets the TV Trigger Polarity property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3TriggerSource.Configure(System.Double,Ivi.Driver.PrecisionTimeSpan,Ivi.Driver.PrecisionTimeSpan,Ivi.Digitizer.WidthPolarity,Ivi.Digitizer.WidthCondition)">
			<summary>Not Supported - Configures the width trigger Source, Level, ThresholdLow, ThresholdHigh, Polarity, and Condition.  A width trigger occurs when a pulse, that passes through Level, with a width between or outside, the width thresholds is detected.</summary>
			<param name="level">Trigger Level. This value sets the Trigger Level property.</param>
			<param name="thresholdLow">Sets the width triggering low threshold. This value sets the Width Low Threshold property.</param>
			<param name="thresholdHigh">Sets the width triggering high threshold. This value sets the Width High Threshold property.</param>
			<param name="polarity">Sets the width polarity. This value sets the Width Polarity property.</param>
			<param name="condition">Specifies whether a pulse that is within or outside the user-specified thresholds trigger waveform acquisition. This value sets the Width Condition property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3TriggerSource.Configure(System.Double,System.Double,Ivi.Digitizer.WindowCondition)">
			<summary>Not Supported - Configures the window trigger Source, ThresholdLow, ThresholdHigh, and Condition.  A window trigger occurs when a signal that enters or leaves a given voltage range is detected.</summary>
			<param name="thresholdLow">Sets the window triggering low threshold in Volts. This value sets the Window Low Threshold property.</param>
			<param name="thresholdHigh">Sets the window triggering high threshold in Volts. This value sets the Window High Threshold property.</param>
			<param name="condition">Specifies whether a pulse that is within or outside the user-specified thresholds trigger waveform acquisition. This value sets the Width Condition property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3TriggerSource.AbortGeneration">
			<summary>Stops the generation of the self-trigger signal previously initiated.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3TriggerSource.InitiateGeneration">
			<summary>Starts the generation of the self-trigger signal.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3TriggerSource.Configure(System.Double,System.Double,Acqiris.AqMD3.TriggerSlope)">
			<summary>Configures the square wave signal properties of the self-trigger generator. Calling this function will automatically set the self-trigger mode to Square Wave.</summary>
			<param name="frequency">Specifies the frequency of the self-trigger square wave signal. The units are Hertz. This value sets the Frequency property.</param>
			<param name="dutyCycle">Configures the duty cycle of the self trigger square wave signal. Behavior depends on the configuration of the Slope property (e.g. if Slope is set to positive DutyCycle defines the percentage that the square wave is in the high state). Units are percentage of the period. This value sets the Duty Cycle property.</param>
			<param name="slope">Specifies whether a rising or a falling edge of the generated waveform triggers the digitizer. This value sets the Slope property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3TriggerSource.LoadConfigurationFile(System.String)">
			<summary>Loads the configuration for the self-trigger generator from a specified configuration file. Calling this function will automatically set the self-trigger mode to Custom Wave.</summary>
			<param name="path">Path to the self-trigger generator configuration file to load.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3TriggerSource.Configure(System.Double,Acqiris.AqMD3.TriggerSlope)">
			<summary>This function sets the edge triggering attributes. An edge trigger occurs when the trigger signal that the end-user specifies with the Source parameter passes through the voltage threshold that the end-user specifies with the level parameter and has the slope that the end-user specifies with the Slope parameter.  This function affects instrument behavior only if the Trigger Type is Edge Trigger. Set the Trigger Type and Trigger Coupling before calling this function.  If the trigger source is one of the analog input channels, an application program should configure the vertical range, vertical coupling, probe attenuation, and the maximum input frequency before calling this function.</summary>
			<param name="level">Specifies the trigger level. This value sets the Trigger Level attribute.</param>
			<param name="slope">Specifies the trigger slope. This value sets the Trigger Slope attribute.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3TriggerSource.Configure(System.Double,System.Double,Acqiris.AqMD3.TriggerSlope)">
			<summary>This function sets the magnitude triggering attributes when used with a down-converted Digital Downconverter (DDC) signal. The magnitude trigger function operates in a similar manner to an edge trigger in that it triggers when the Threshold value is passed in the selected Slope direction, but in this case the signal is the magnitude value of the complex down-converted DDC signal. Set Acquisition.Mode = Downconverter and trigger Type = Magnitude before calling this function. The trigger source must be one of the analog input channels, an application program should configure the vertical range, vertical coupling, probe attenuation, and the maximum input frequency before calling this function.</summary>
			<param name="level">Specifies the trigger level. This value sets the Trigger Level attribute.</param>
			<param name="hysteresis">Specifies the trigger hysteresis in Volts. This value sets the Trigger Hysteresis attribute.</param>
			<param name="slope">Specifies the trigger slope. This value sets the Trigger Slope attribute.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Coupling">
			<summary>Specifies how the digitizer couples the trigger source.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Edge">
			<summary>Pointer to the class-compliant IIviDigitizerTriggerEdge interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Glitch">
			<summary>Pointer to the class-compliant IIviDigitizerTriggerGlitch interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Hysteresis">
			<summary>Specifies the trigger hysteresis in Volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Level">
			<summary>Specifies the voltage threshold for the trigger sub-system. The units are Volts. This attribute affects instrument behavior only when the Trigger Type is set to one of the following values: Edge Trigger, Glitch Trigger, or Width Trigger.
This attribute, along with the Trigger Slope, Trigger Source, and Trigger Coupling attributes, defines the trigger event when the Trigger Type is set to Edge Trigger.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Runt">
			<summary>Pointer to the class-compliant IIviDigitizerTriggerRunt interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Type">
			<summary>The kind of event that triggers the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.TV">
			<summary>Pointer to the class-compliant IIviDigitizerTriggerTV interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Width">
			<summary>Pointer to the class-compliant IIviDigitizerTriggerWidth interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Window">
			<summary>Pointer to the class-compliant IIviDigitizerTriggerWindow interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Name">
			<summary>The repeated capability physical identifier.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Slope">
			<summary>Specifies whether a rising or a falling edge triggers the digitizer.  This attribute affects instrument operation only when the Trigger Type attribute is set to Edge Trigger.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Condition">
			<summary>Not Supported - Specifies the glitch condition. This attribute determines whether the glitch trigger happens when the digitizer detects a pulse with a width less than or greater than the width value.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Polarity">
			<summary>Not Supported - Specifies the polarity of the glitch that triggers the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Width">
			<summary>Not Supported - Specifies the glitch width. The units are seconds. The digitizer triggers when it detects a pulse with a width less than or greater than this value, depending on the Glitch Condition attribute.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Polarity">
			<summary>Not Supported - Specifies the polarity of the runt that triggers the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.ThresholdHigh">
			<summary>Not Supported - The high threshold the digitizer uses for runt triggering.  The units are Volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.ThresholdLow">
			<summary>Not Supported - The low threshold the digitizer uses for runt triggering.  The units are Volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.LineNumber">
			<summary>Not Supported - Specifies the line on which the digitizer triggers. The driver uses this attribute when the TV Trigger Event is set to TV Event Line Number. The line number setting is independent of the field. This means that to trigger on the first line of the second field, the user must configure the line number to the value of 263 (if we presume that field one had 262 lines).</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Polarity">
			<summary>Not Supported - Specifies the polarity of the TV signal.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.SignalFormat">
			<summary>Not Supported - Specifies the format of TV signal on which the digitizer triggers.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.TriggerEvent">
			<summary>The event on which the digitizer triggers.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Condition">
			<summary>Not Supported - Specifies whether a pulse that is within or outside the high and low thresholds triggers the digitizer. The end-user specifies the high and low thresholds with the Width High Threshold and Width Low Threshold attributes.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Polarity">
			<summary>Not Supported - Specifies the polarity of the pulse that triggers the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.ThresholdHigh">
			<summary>Not Supported - Specifies the high width threshold time in seconds.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.ThresholdLow">
			<summary>Not Supported - Specifies the low width threshold time in seconds.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Condition">
			<summary>Not Supported - Specifies whether a signal that is entering or leaving the voltage window defined by the high and low thresholds triggers the digitizer. The end-user specifies the high and low thresholds with the Window High Threshold and Window Low Threshold attributes.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.ThresholdHigh">
			<summary>Not Supported - Specifies the high window threshold voltage in Volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.ThresholdLow">
			<summary>Not Supported - Specifies the low window threshold voltage in Volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.DutyCycle">
			<summary>Configures the duty cycle of the self trigger square wave signal. Behavior depends on the configuration of the Slope property (e.g. if Slope is set to positive DutyCycle defines the percentage that the square wave is in the high state). Units are percentage of the period.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Frequency">
			<summary>Specifies the frequency of the self-trigger square wave signal. The units are Hertz.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Slope">
			<summary>Specifies whether a rising or a falling edge of the generated waveform triggers the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.SquareWave">
			<summary>Pointer to the IAqMD3TriggerSourceSelfTriggerSquareWave interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.CustomWave">
			<summary>Pointer to the IAqMD3TriggerSourceSelfTriggerCustomWave interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Mode">
			<summary>Defines the self-trigger signal generation mode.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.SelfTrigger">
			<summary>Pointer to the IAqMD3TriggerSourceSelfTrigger interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Coupling">
			<summary>Specifies how the digitizer couples the trigger source.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Hysteresis">
			<summary>Specifies the trigger hysteresis in Volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Level">
			<summary>Specifies the voltage threshold for the trigger sub-system. The units are Volts. This attribute affects instrument behavior only when the Trigger Type is set to one of the following values: Edge Trigger, Glitch Trigger, or Width Trigger.
This attribute, along with the Trigger Slope, Trigger Source, and Trigger Coupling attributes, defines the trigger event when the Trigger Type is set to Edge Trigger.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Type">
			<summary>The kind of event that triggers the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Slope">
			<summary>Specifies whether a rising or a falling edge triggers the digitizer.  This attribute affects instrument operation only when the Trigger Type attribute is set to Edge Trigger.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Edge">
			<summary>Pointer to the IAqMD3TriggerEdge interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.DwellTimeSamples">
			<summary>Positive values of dwell time indicate the number of samples that must be in the initial trigger state (e.g. below the low threshold for a rising edge trigger) before a trigger will be recognized.  Negative values of dwell time indicate the number of samples that must be in the second trigger state before a trigger is recognized.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Slope">
			<summary>Specifies whether a rising (Positive) or a falling (Negative) magnitude triggers the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.Magnitude">
			<summary>Pointer to the IAqMD3TriggerSourceMagnitude interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSource.PulseDuration">
			<summary>Defines the duration of the pulse generated by the Self Trigger configured in Armed Pulse mode.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3TriggerSourceCollection">
			<summary>Collection class for the TriggerSource repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3TriggerSourceCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3TriggerSourceCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3TriggerSourceCollection.GetEnumerator">
			<summary />
			<returns />
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSourceCollection.Item(System.String)">
			<summary>Returns an interface pointer which can be used to control the attributes and other functionality of the repeated capability instance identified by the specified physical name.</summary>
			<param name="name">The repeated capability physical identifier.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSourceCollection.Item(System.String)">
			<summary>Returns an interface pointer which can be used to control the attributes and other functionality of the repeated capability instance identified by the specified physical name.</summary>
			<param name="name">The repeated capability physical identifier.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSourceCollection.Count">
			<summary>The number of repeated capability instances.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3TriggerSourceCollection.Count">
			<summary>The number of repeated capability instances.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3ArmSource">
			<summary>Root class for the ArmSource repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3ArmSource.Configure(System.Double,Ivi.Digitizer.Slope)">
			<summary>Not Supported - This function sets the edge arming attributes. An edge occurs when the arm signal that the end-user specifies with the Source parameter passes through the voltage threshold that the end-user specifies with the Level parameter and has the slope that the end-user specifies with the Slope parameter.  This function affects instrument behavior only if the Arm Type is Edge Arm. Set the Arm Type and Arm Coupling before calling this function.  If the arm source is one of the analog input channels, an application program should configure the vertical range, vertical coupling, probe attenuation, and the maximum input frequency before calling this function.</summary>
			<param name="level">Specifies the arm level. This value sets the Trigger Level property.</param>
			<param name="slope">Specifies the trigger slope. This value sets the Trigger Slope property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3ArmSource.Configure(System.Double,Ivi.Driver.PrecisionTimeSpan,Ivi.Digitizer.GlitchPolarity,Ivi.Digitizer.GlitchCondition)">
			<summary>Not Supported - This function configures the glitch arm. A glitch arm occurs when the arm signal has a pulse with a width that is less than or greater than the glitch width. The end user specifies which comparison criterion to use with the GlitchCondition parameter. The end-user specifies the glitch width with the GlitchWidth parameter. The end-user specifies the polarity of the pulse with the GlitchPolarity parameter. The arm does not actually occur until the edge of a pulse that corresponds to the GlitchWidth and GlitchPolarity crosses the threshold the end-user specifies in the TriggerLevel parameter.  This function affects instrument behavior only if the arm type is Glitch Arm. Set the arm type and arm coupling before calling this function.</summary>
			<param name="level">The arm level. This value sets the Arm Level property.</param>
			<param name="width">The glitch width. This value sets the Glitch Width property.</param>
			<param name="polarity">The glitch polarity. This value sets the Glitch Polarity property.</param>
			<param name="condition">The glitch condition. This value sets the Glitch Condition property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3ArmSource.Configure(System.Double,System.Double,Ivi.Digitizer.RuntPolarity)">
			<summary>Not Supported - This function configures the runt arm. A runt occurs when the arm signal crosses one of the runt thresholds twice without crossing the other runt threshold. The end-user specifies the runt thresholds with the RuntLowThreshold and RuntHighThreshold parameters. The end-user specifies the polarity of the runt with the RuntPolarity parameter.  This function affects instrument behavior only if the arm type is Runt Trigger. Set the arm type and trigger coupling before calling this function.</summary>
			<param name="thresholdLow">The runt arming low threshold. This value sets the ArmRunt ThresholdLow property.</param>
			<param name="thresholdHigh">The runt arming high threshold. This value sets the ArmRunt ThresholdHigh property.</param>
			<param name="polarity">The runt arming polarity. This value sets the ArmRunt Polarity property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3ArmSource.Configure(Ivi.Digitizer.TVSignalFormat,Ivi.Digitizer.TVTriggerEvent,Ivi.Digitizer.TVTriggerPolarity)">
			<summary>Not Supported - This function configures the digitizer for TV arming.  It configures the TV signal format, the event and the signal polarity.  This function affects instrument behavior only if the arm type is TV Arm. Set the Arm Type and Arm Coupling before calling this function.</summary>
			<param name="signalFormat">Specifies the TV arm signal format. This value sets the TV Arm Signal Format property.</param>
			<param name="triggerEvent">Specifies the TV arm event. This value sets the TV Arm Event property.</param>
			<param name="polarity">Specifies the polarity of the TV arm signal. This value sets the TV Arm Polarity property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3ArmSource.Configure(System.Double,Ivi.Driver.PrecisionTimeSpan,Ivi.Driver.PrecisionTimeSpan,Ivi.Digitizer.WidthPolarity,Ivi.Digitizer.WidthCondition)">
			<summary>Not Supported - Configures the width arm Source, Level, ThresholdLow, ThresholdHigh, Polarity, and Condition.  A width arm occurs when a pulse, that passes through Level, with a width between or outside, the width thresholds is detected.</summary>
			<param name="level">Arm level. This value sets the Arm Level property.</param>
			<param name="thresholdLow">Width low threshold. This value sets the Width Low Threshold property.</param>
			<param name="thresholdHigh">Width high threshold. This value sets the Width High Threshold property.</param>
			<param name="polarity">Pulse polarity. This value sets the Width Polarity property.</param>
			<param name="condition">Specifies whether a pulse that is within or outside the user-specified thresholds arms the digitizer. This value sets the Width Condition property.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3ArmSource.Configure(System.Double,System.Double,Ivi.Digitizer.WindowCondition)">
			<summary>Not Supported - Configures the window Arm Source, ThresholdLow, ThresholdHigh, and Condition.  A window arm occurs when a signal that enters or leaves a given voltage range is detected.</summary>
			<param name="thresholdLow">Window arming low threshold in Volts. This value sets the Window Low Threshold property.</param>
			<param name="thresholdHigh">Window arming high threshold in Volts. This value sets the Window High Threshold property.</param>
			<param name="condition">Specifies whether a pulse that is within or outside the user-specified thresholds arms the digitizer. This value sets the Width Condition property.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Coupling">
			<summary>Not Supported - Specifies how the digitizer couples the arm source.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Edge">
			<summary>Pointer to the class-compliant IIviDigitizerArmEdge interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Glitch">
			<summary>Pointer to the class-compliant IIviDigitizerArmGlitch interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Hysteresis">
			<summary>Not Supported - Specifies the arm hysteresis in Volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Level">
			<summary>Not Supported - Specifies the voltage threshold for the arm sub-system. The units are Volts. This attribute affects instrument behavior only when the Arm Type is set to one of the following values: Edge Trigger, Glitch Trigger, or Width Trigger.This attribute, along with the Arm Slope, Arm Source, and Arm Coupling attributes, defines the trigger event when the Arm Type is set to Edge Trigger.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Runt">
			<summary>Pointer to the class-compliant IIviDigitizerArmRunt interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.TV">
			<summary>Pointer to the class-compliant IIviDigitizerArmTV interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Type">
			<summary>Not Supported - The kind of event that arms the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Width">
			<summary>Pointer to the class-compliant IIviDigitizerArmWidth interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Window">
			<summary>Pointer to the class-compliant IIviDigitizerArmWindow interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Name">
			<summary>The repeated capability physical identifier.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Slope">
			<summary>Not Supported - Specifies whether a rising or a falling edge arms the digitizer.  This attribute affects instrument operation only when the Arm Type attribute is set to Edge Arm.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Condition">
			<summary>Not Supported - Specifies the glitch condition. This attribute determines whether the glitch arm happens when the digitizer detects a pulse with a width less than or greater than the width value.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Width">
			<summary>Not Supported - Specifies the glitch width. The units are seconds. The digitizer triggers when it detects a pulse with a width less than or greater than this value, depending on the Glitch Condition attribute.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Polarity">
			<summary>Not Supported - Specifies the polarity of the glitch that arms the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Polarity">
			<summary>Not Supported - Specifies the polarity of the runt that arms the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.ThresholdHigh">
			<summary>Not Supported - The high threshold the digitizer uses for runt arming.  The units are Volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.ThresholdLow">
			<summary>Not Supported - The low threshold the digitizer uses for runt arming.  The units are Volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.LineNumber">
			<summary>Not Supported - Specifies the line on which the digitizer arms.  The driver uses this attribute when the TV Arm Event is set to TV Event Line Number. The line number setting is independent of the field. This means that to arm on the first line of the second field, the user must configure the line number to the value of 263 (if we presume that field one had 262 lines).</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Polarity">
			<summary>Not Supported - Specifies the polarity of the TV signal.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.SignalFormat">
			<summary>Not Supported - Specifies the format of TV signal on which the digitizer arms.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.TriggerEvent">
			<summary>The event on which the digitizer arms.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Condition">
			<summary>Not Supported - Specifies whether a pulse that is within or outside the high and low thresholds arms the digitizer. The end-user specifies the high and low thresholds with the Width High Threshold and Width Low Threshold attributes.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Polarity">
			<summary>Not Supported - Specifies the polarity of the pulse that arms the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.ThresholdHigh">
			<summary>Not Supported - Specifies the high width threshold time in seconds.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.ThresholdLow">
			<summary>Not Supported - Specifies the low width threshold time in seconds.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.Condition">
			<summary>Not Supported - Specifies whether a signal that is entering or leaving the voltage window defined by the high and low thresholds arms the digitizer. The end-user specifies the high and low thresholds with the Window High Threshold and Window Low Threshold attributes.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.ThresholdHigh">
			<summary>Not Supported - Specifies the high window threshold voltage in Volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSource.ThresholdLow">
			<summary>Not Supported - Specifies the low window threshold voltage in Volts.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3ArmSourceCollection">
			<summary>Collection class for the ArmSource repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3ArmSourceCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3ArmSourceCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSourceCollection.Item(System.String)">
			<summary>Returns an interface pointer which can be used to control the attributes and other functionality of the repeated capability instance identified by the specified physical name.</summary>
			<param name="name">The repeated capability physical identifier.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ArmSourceCollection.Count">
			<summary>The number of repeated capability instances.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3Stream">
			<summary>Root class for the Stream repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3Stream.FetchDataInt32(System.Int64,Acqiris.AqMD3.IAqMD3StreamElements`1)">
			<summary>This function returns a stream of Elements. The ElementSizeInBits and the meaning of each Element depend on the StreamType.If there are not as many elements available to be fetched as nbrElementsToFetch, the current number of elements that are available will be returned as AvailableElements.</summary>
			<param name="nbrElementsToFetch">Specifies the maximum number of Elements to be retrieved from the instrument. The Element size is 32 bits. NbrElementsToFetch must be an integer multiple of GranularityInBytes / 4 and it must not exceed MaxSizeInBytes / 4.</param>
			<param name="elements"></param>
			<returns />
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.Name">
			<summary>The repeated capability physical identifier.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.BitsPerMarker">
			<summary>Number of bits representing a Marker value.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.FractionalBits">
			<summary>Number of fractional bits in the Marker value.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.Markers">
			<summary>Pointer to the IAqMD3StreamMarkers interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.FrameSize">
			<summary>Number of samples over which each MimMax pair is computed.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.MinMax">
			<summary>Pointer to the IAqMD3StreamMinMax interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.DataEmulationEnabled">
			<summary>Specifies whether the Data Emulation is enabled. If True, the output data are fetched from an internal ramp waveform generator. If False, the output data are fetched from the digitizer ADC stream.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.DataEmulationRate">
			<summary>Specifies the emulated data rate in samples per seconds. Ignored if the Data Emulation is disabled.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.DataTruncationEnabled">
			<summary>Specifies whether the Data Truncation is enabled.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.DataTruncationBitCount">
			<summary>Specifies the size in bits of an output stream Element. Ignored if DataTruncationEnabled is False.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.DataTruncationKeepMsb">
			<summary>Specifies whether the output stream Element contains the most significant or the least significant bits of the raw digitizer data sample. Ignored if DataTruncationEnabled is False.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.BitsPerSample">
			<summary>Returns the number of bits per sample.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.Samples">
			<summary>Pointer to the IAqMD3StreamSamples interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.Type">
			<summary>Indicates the type of the stream.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.Enabled">
			<summary>Specifies whether the stream is enabled on the instrument.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.GranularityInBytes">
			<summary>Indicates the granularity of data for the FetchData operations.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3Stream.MaxSizeInBytes">
			<summary>Indicates the maximal size of data for the FetchData operations.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3StreamCollection">
			<summary>Collection class for the Stream repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3StreamCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3StreamCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3StreamCollection.Item(System.String)">
			<summary>Returns an interface pointer which can be used to control the attributes and other functionality of the repeated capability instance identified by the specified physical name.</summary>
			<param name="name">The repeated capability physical identifier.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3StreamCollection.Count">
			<summary>The number of repeated capability instances.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3PrivateFirmware">
			<summary>Root class for the PrivateFirmware repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateFirmware.LoadFromFile(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="path">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateFirmware.Name">
			<summary>The repeated capability physical identifier.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3PrivateFirmwareCollection">
			<summary>Collection class for the PrivateFirmware repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateFirmwareCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateFirmwareCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateFirmwareCollection.Item(System.String)">
			<summary>Returns an interface pointer which can be used to control the attributes and other functionality of the repeated capability instance identified by the specified physical name.</summary>
			<param name="name">The repeated capability physical identifier.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateFirmwareCollection.Count">
			<summary>The number of repeated capability instances.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3PrivateStore">
			<summary>Root class for the PrivateStore repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateStore.LoadFromFile(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="path">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateStore.SaveToFile(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="path">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateStore.LoadFromAttributes">
			<summary>This function is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateStore.ReadAttributes">
			<summary>This function is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateStore.Name">
			<summary>The repeated capability physical identifier.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateStore.BarCode">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateStore.PartNumber">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateStore.PartNumberRevision">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateStore.SerialNumber">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateStore.ProductionDate">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateStore.TestDate">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateStore.CompatibleWith">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3PrivateStoreCollection">
			<summary>Collection class for the PrivateStore repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateStoreCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateStoreCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateStoreCollection.SaveToFile(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="path">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateStoreCollection.Item(System.String)">
			<summary>Returns an interface pointer which can be used to control the attributes and other functionality of the repeated capability instance identified by the specified physical name.</summary>
			<param name="name">The repeated capability physical identifier.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateStoreCollection.Count">
			<summary>The number of repeated capability instances.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateStoreCollection.SerialNumber">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateStoreCollection.Options">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateStoreCollection.EepromModuleGeneration">
			<summary>This interface is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateStoreCollection.TestedDriverVersion">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateStoreCollection.MaximumDriverVersion">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3LogicDevice">
			<summary>Root class for the LogicDevice repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3LogicDevice.WriteStreamWaveformInt8(System.Int32,System.Byte[])">
			<summary>Writes an array of Samples into a given Stream to be emulated.</summary>
			<param name="stream">One-based index in the list of Streams.</param>
			<param name="samples">Array containing the Samples to upload into the Stream.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3LogicDevice.PlaybackStreamWaveforms">
			<summary>Starts playback of emulation data. The waveforms previously loaded (e.g. through WriteStreamWaveformInt16 function) will be started synchronously and played on all streams according to the stream mode.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3LogicDevice.LoadFromFile(System.String)">
			<summary>Load the bitfile to the logic device.</summary>
			<param name="path">Specifies the path of the bitfile location.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3LogicDevice.ReadIndirectInt32(System.Int32,System.Int64,System.Int64,Acqiris.AqMD3.IAqMD3DataElements`1)">
			<summary>Reads up to NumElements 32 bit integers of the Indirect Buffer with identifier Id from the FPGA identified by LogicDevice repeated capability into the memory referenced by Data.</summary>
			<param name="id">The firmware indirect buffer id.</param>
			<param name="startAddress">The start address in the FPGA where the data will be read.</param>
			<param name="numElements">Number of elements to read.</param>
			<param name="elements"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3LogicDevice.ReadRegisterInt32(System.Int64)">
			<summary>Reads a 32 bits integer value from the register at Offset in the FPGA identified by LogicDevice repeated capability.</summary>
			<param name="offset">Address in the FPGA where the register will be read.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3LogicDevice.WriteIndirectInt32(System.Int32,System.Int64,System.Int64,System.Int32[])">
			<summary>Writes the contents of Data to the Indirect Buffer with identifier Id of the FPGA identified by LogicDevice repeated capability.</summary>
			<param name="id">The firmware indirect buffer id.</param>
			<param name="startAddress">The start address in the FPGA where the data will be written.</param>
			<param name="numElements">Number of elements to write.</param>
			<param name="data">Buffer containing data to write into the firmware indirect buffer.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3LogicDevice.WriteRegisterInt32(System.Int64,System.Int32)">
			<summary>Writes the 32 bits integer value Value to the register at Offset in the FPGA identified by LogicDevice repeated capability.</summary>
			<param name="offset">Address in the FPGA where the register will be written.</param>
			<param name="value">Value to write into the register.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3LogicDevice.ConfigureBufferAddresses(System.Int32,Acqiris.AqMD3.BufferAddresses)">
			<summary>Configures the indirect Buffer Addresses.</summary>
			<param name="bufferId">The firmware indirect buffer id. Only buffers 16 to 31 can be configured.</param>
			<param name="addresses">The firmware indirect buffer base address.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3LogicDevice.GetBufferAddresses(System.Int32)">
			<summary>Retrieves the indirect Buffer Addresses.</summary>
			<param name="bufferId">The firmware indirect buffer id. Only buffers 16 to 31 can be retrieved.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3LogicDevice.GetCoreVersion(Acqiris.AqMD3.LogicDeviceCore)">
			<summary>Retrieves the Version of the given Core.</summary>
			<param name="coreId">The firmware Core Identifier.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3LogicDevice.WriteFirmwareStoreFromFile(System.Int32,System.String)">
			<summary>Stores in the given Firmware Config the Firmware from given File.</summary>
			<param name="firmwareStore">One-based index in the list of Firmware Stores.</param>
			<param name="path">Path to the file containing the Firmware.</param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3LogicDevice.WriteStreamWaveformInt16(System.Int32,System.Int16[])">
			<summary>Writes an array of Samples into a given Stream to be emulated.</summary>
			<param name="stream">One-based index in the list of Streams.</param>
			<param name="samples">Array containing the Samples to upload into the Stream.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3LogicDevice.Name">
			<summary>The repeated capability physical identifier.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3LogicDevice.FirmwareStoreCount">
			<summary>Read Only - Number of available firmware stores in the LogicDevice.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3LogicDevice.MemoryBanks">
			<summary>Pointer to the IAqMD3LogicDeviceMemoryBanks interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3LogicDevice.SamplesUnsigned">
			<summary>When True, directs the LogicDevice to receive unsigned samples values from the ADC.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3LogicDevice.StreamMode">
			<summary>Specifies the mode the Streams are operating in.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3LogicDevice.StreamsCount">
			<summary>Read Only - Number of Streams available in the LogicDevice.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3LogicDevice.LoadFromStoreEccWarningOccurred">
			<summary>Read Only [FDK Only] - A True value indicates that during the last retrieve operation from a Firmware Store, the ECC system detected and corrected one or more errors in the stored firmware. Such retrieve operations occur either at initialization (when specified in the initialization options), or when writing a Firmware Store from a file (the written firmware is immediately re-read as an operation success check).The ECC system corrects such errors, however when they occur it is advised to re-write the Firmware Store as a preventive measure. As the number of errors increases, the firmware eventually becomes impossible to correct. A False value indicates that no error was detected during the last retrieve operation from a Firmware Store.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3LogicDeviceCollection">
			<summary>Collection class for the LogicDevice repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3LogicDeviceCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3LogicDeviceCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3LogicDeviceCollection.Item(System.String)">
			<summary>Returns an interface pointer which can be used to control the attributes and other functionality of the repeated capability instance identified by the specified physical name.</summary>
			<param name="name">The repeated capability physical identifier.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3LogicDeviceCollection.Count">
			<summary>The number of repeated capability instances.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3LogicDeviceMemoryBank">
			<summary>Root class for the LogicDeviceMemoryBank repeated capability.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3LogicDeviceMemoryBank.Name">
			<summary>The repeated capability physical identifier.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3LogicDeviceMemoryBank.AccessControl">
			<summary>Specifies how the MemoryBank accesses are controlled. This value is used only when the Acquisition Mode is UserFDK.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3LogicDeviceMemoryBank.AccessMode">
			<summary>When MemoryBank access is controlled by software, specifies how the memory is currently accessed.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3LogicDeviceMemoryBank.FIFOModeEnabled">
			<summary>Enables the FIFO mode for MemoryBank. Used when streaming.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3LogicDeviceMemoryBankCollection">
			<summary>Collection class for the LogicDeviceMemoryBank repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3LogicDeviceMemoryBankCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3LogicDeviceMemoryBankCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3LogicDeviceMemoryBankCollection.Item(System.String)">
			<summary>Returns an interface pointer which can be used to control the attributes and other functionality of the repeated capability instance identified by the specified physical name.</summary>
			<param name="name">The repeated capability physical identifier.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3LogicDeviceMemoryBankCollection.Count">
			<summary>The number of repeated capability instances.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3ControlIO">
			<summary>Root class for the ControlIO repeated capability.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ControlIO.Name">
			<summary>The repeated capability physical identifier.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ControlIO.Signal">
			<summary>Signal present on a Control IO connector.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ControlIO.AvailableSignals">
			<summary>Read Only - Comma separated list of available signal names that can be used for the Signal attribute of this repeated capability.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ControlIO.AnalogOut">
			<summary>Reference to the IAqMD3ControlIOAnalogOut interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ControlIO.Level">
			<summary>Output level of the analog output, as signed 16-bit left aligned DAC code.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ControlIO.OutSoftwareState">
			<summary>Signal state present on the ControlIO connector when the currently selected Signal is configured as Out-Software.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ControlIO.InSoftwareState">
			<summary>Signal state present on the ControlIO connector when the currently selected Signal is configured as In-Software.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ControlIO.InputTermination">
			<summary>Input termination selection.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3ControlIOCollection">
			<summary>Collection class for the ControlIO repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3ControlIOCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3ControlIOCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ControlIOCollection.Item(System.String)">
			<summary>Returns an interface pointer which can be used to control the attributes and other functionality of the repeated capability instance identified by the specified physical name.</summary>
			<param name="name">The repeated capability physical identifier.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3ControlIOCollection.Count">
			<summary>The number of repeated capability instances.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3MonitoringValue">
			<summary>Root class for the MonitoringValue repeated capability.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3MonitoringValue.Name">
			<summary>The repeated capability physical identifier.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3MonitoringValue.CurrentValue">
			<summary>Read Only - Returns the current monitored value of the MonitoringValue.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3MonitoringValue.Unit">
			<summary>Read Only - Returns the unit of this monitoring value.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3MonitoringValue.LimitHigh">
			<summary>Read Only - Returns the limit value above which the instrument behavior may not be consistent with the specifications.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3MonitoringValue.LimitLow">
			<summary>Read Only - Returns the limit value below which the instrument behavior may not be consistent with the specifications.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3MonitoringValueCollection">
			<summary>Collection class for the MonitoringValue repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3MonitoringValueCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3MonitoringValueCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3MonitoringValueCollection.Item(System.String)">
			<summary>Returns an interface pointer which can be used to control the attributes and other functionality of the repeated capability instance identified by the specified physical name.</summary>
			<param name="name">The repeated capability physical identifier.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3MonitoringValueCollection.Count">
			<summary>The number of repeated capability instances.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3DDCCore">
			<summary>Root class for the DDCCore repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3DDCCore.FetchMultiRecordWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Acqiris.AqMD3.IAqMD3DDCWaveformCollection`1)">
			<summary>This function returns the (multi-record) waveform the digitizer acquired for the specified DDC core. The waveform is from a previously initiated acquisition. Returned waveform samples are complex values, stored as interleaved real and imaginary parts.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3DDCCore.FetchMultiRecordWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Acqiris.AqMD3.IAqMD3DDCWaveformCollection`1)">
			<summary>This function returns the (multi-record) waveform the digitizer acquired for the specified DDC core. The waveform is from a previously initiated acquisition. Returned waveform samples are complex values, stored as interleaved real and imaginary parts.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3DDCCore.FetchMultiRecordRawWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Acqiris.AqMD3.IAqMD3DDCRawWaveformCollection`1)">
			<summary>This function returns the (multi-record) waveform the digitizer acquired for the specified DDC core. The waveform is from a previously initiated acquisition. Returned waveform samples are complex values, stored as interleaved real and imaginary elements of type short.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of complex data points per record to return.</param>
			<param name="waveforms">A waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3DDCCore.FetchMultiRecordRawWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Acqiris.AqMD3.IAqMD3DDCRawWaveformCollection`1)">
			<summary>This function returns the (multi-record) waveform the digitizer acquired for the specified DDC core. The waveform is from a previously initiated acquisition. Returned waveform samples are complex values, stored as interleaved real and imaginary elements of type int.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of complex data points per record to return.</param>
			<param name="waveforms">A waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads.</param>
			<returns />
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DDCCore.Name">
			<summary>The repeated capability physical identifier.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DDCCore.CenterFrequency">
			<summary>Specifies the center frequency, in Hz, from which the digitizer will downconvert. It sets the local oscillator frequency.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DDCCore.DataSource">
			<summary>Selects the input data source used by the DDC core (e.g. "Channel1").</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DDCCore.DecimationDenominator">
			<summary>The denominator of the fractional decimation factor. The decimation factor is applied to the data source sample rate to determine the decimated rate used by the DDC core.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DDCCore.DecimationNumerator">
			<summary>The numerator of the fractional decimation factor. The decimation factor is applied to the data source sample rate to determine the decimated rate used by the DDC core.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DDCCore.LOInitialPhase">
			<summary>The initial phase of the local oscillator the DDC core will use during the downconversion.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3DDCCoreCollection">
			<summary>Collection class for the DDCCore repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3DDCCoreCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3DDCCoreCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DDCCoreCollection.Item(System.String)">
			<summary>Returns an interface pointer which can be used to control the attributes and other functionality of the repeated capability instance identified by the specified physical name.</summary>
			<param name="name">The repeated capability physical identifier.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DDCCoreCollection.Count">
			<summary>The number of repeated capability instances.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3PrivateCalibrationStep">
			<summary>Root class for the PrivateCalibrationStep repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateCalibrationStep.Characterize(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="dataFilePath"></param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateCalibrationStep.Execute">
			<summary />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateCalibrationStep.GetParamBoolean(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateCalibrationStep.GetParamInt32(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateCalibrationStep.GetParamReal64(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateCalibrationStep.GetParamString(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateCalibrationStep.SetParamBoolean(System.String,System.Boolean)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="value"></param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateCalibrationStep.SetParamInt32(System.String,System.Int32)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="value"></param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateCalibrationStep.SetParamReal64(System.String,System.Double)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="value"></param>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateCalibrationStep.SetParamString(System.String,System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="value"></param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateCalibrationStep.Name">
			<summary>The repeated capability physical identifier.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateCalibrationStep.Enabled">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateCalibrationStep.UseInputSignal">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateCalibrationStep.DumpWaveforms">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateCalibrationStep.IgnoreErrors">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3PrivateCalibrationStepCollection">
			<summary>Collection class for the PrivateCalibrationStep repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateCalibrationStepCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3PrivateCalibrationStepCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateCalibrationStepCollection.Item(System.String)">
			<summary>Returns an interface pointer which can be used to control the attributes and other functionality of the repeated capability instance identified by the specified physical name.</summary>
			<param name="name">The repeated capability physical identifier.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3PrivateCalibrationStepCollection.Count">
			<summary>The number of repeated capability instances.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3DigitalOutput">
			<summary>Root class for the Output repeated capability.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DigitalOutput.Name">
			<summary>The repeated capability physical identifier.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DigitalOutput.NumberOfPulses">
			<summary>The number of pulses to generate (ignored in Periodic mode).</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DigitalOutput.PulsePeriod">
			<summary>Pulse period in seconds.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DigitalOutput.PulseWidth">
			<summary>Pulse width in seconds.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DigitalOutput.PulseDelay">
			<summary>Pulse delay in seconds.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DigitalOutput.PulsePolarity">
			<summary>Pulse polarity.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DigitalOutput.Mode">
			<summary>The type of signal to be generated.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AqMD3DigitalOutputCollection">
			<summary>Collection class for the Output repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3DigitalOutputCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.AqMD3DigitalOutputCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through a collection.</summary>
			<returns>An IEnumerator object that can be used to iterate through the collection.</returns>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DigitalOutputCollection.Item(System.String)">
			<summary>Returns an interface pointer which can be used to control the attributes and other functionality of the repeated capability instance identified by the specified physical name.</summary>
			<param name="name">The repeated capability physical identifier.</param>
		</member>
		<member name="P:Acqiris.AqMD3.AqMD3DigitalOutputCollection.Count">
			<summary>The number of repeated capability instances.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3">
			<summary>Root interface of driver hierarchy.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3.Acquisition">
			<summary>Pointer to the IAqMD3Acquistion interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3.Streams">
			<summary>Pointer to the IAqMD3Streams interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3.Private">
			<summary>This interface is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3.Channels">
			<summary>Pointer to the IAqMD3Channels interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3.Trigger">
			<summary>Pointer to the IAqMD3Trigger interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3.LogicDevices">
			<summary>Pointer to the IAqMD3LogicDevices interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3.Calibration">
			<summary>Pointer to the IAqMD3Calibration interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3.Temperature">
			<summary>Pointer to the IAqMD3Temperature interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3.ReferenceOscillator">
			<summary>Pointer to the IAqMD3ReferenceOscillator interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3.SampleClock">
			<summary>Pointer to the IAqMD3SampleClock interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3.ControlIOs">
			<summary>Pointer to the IAqMD3ControlIOs interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3.InstrumentInfo">
			<summary>General instrument information interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3.DDCCores">
			<summary>Reference to the IAqMD3DDCCoreCollection interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3.TimeReference">
			<summary>Reference to the IAqMD3TimeReference interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3.DigitalOut">
			<summary>Reference to the IAqMD3DigitalOut interface.</summary>
		</member>
		<member name="T:MindWorks.Nimbus.IDriverNode">
			<summary />
		</member>
		<member name="T:MindWorks.Nimbus.ICacheEquatable">
			<summary />
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3Acquisition">
			<summary>IAqMD3Acquisition interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.Initiate">
			<summary>Initiates a waveform acquisition.  The digitizer leaves the Idle state and waits for a trigger.  The digitizer acquires a waveform for each enabled channel.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.Abort">
			<summary>Aborts an acquisition and returns the digitizer to the Idle state.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.WaitForAcquisitionComplete(System.Int32)">
			<summary>Waits until the configured acquisition is complete.  If no acquisition is currently running, this function returns immediately.   If the acquisition does not complete  within the time period the user specified with the MaxTimeMilliseconds parameter, the function returns the Max Time Exceeded error.</summary>
			<param name="maxTimeMilliseconds">Specifies the maximum time the end-user allows for this function to complete.  The units are  milliseconds.  Defined values:
Max Time Infinite - The function waits indefinitely for the acquisition to complete.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.ConfigureAcquisition(System.Int64,System.Int64,System.Double)">
			<summary>This function configures the most commonly configured attributes of the digitizer acquisition sub-system. These attributes are the samples per record, the number of records, and the sample rate.</summary>
			<param name="numRecordsToAcquire">Specifies the number of records in the acquisition. This value sets the Num Records to Acquire attribute.</param>
			<param name="recordSize">Specifies the number of samples in each record.  This value sets the Record Size attribute.</param>
			<param name="sampleRate">Specifies the sample rate in samples per second.  This value sets the Sample Rate attribute.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.QueryMinWaveformMemory(System.Int32,System.Int64,System.Int64,System.Int64)">
			<summary>This function is used to determine the minimum amount of memory that is needed to fetch or read data from the digitizer with maximum performance.</summary>
			<param name="dataWidth">Specifies the size of the sampled data that will be retrieved. The value of this parameter must be 8, 16, 32 or 64, corresponding to the intended Read/Fetch function.</param>
			<param name="numRecords">Specifies the number of records that will be read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numPointsPerRecord">Specifies the number of data points to return.</param>
			<returns>The minimum buffer size in samples needed for a subsequent Read or Fetch call with the same readout parameters.</returns>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.ApplySetup">
			<summary>Applies directly the configured properties setup to the instrument.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.CreateWaveformCollectionDouble(System.Int64,System.Int64)">
			<summary>Create a collection of waveform objects of type Double that can be used with multi-record Fetch methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.CreateWaveformCollectionInt16(System.Int64,System.Int64)">
			<summary>Create a collection of waveform objects of type Int16 that can be used with multi-record Fetch methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.CreateWaveformCollectionInt32(System.Int64,System.Int64)">
			<summary>Create a collection of waveform objects of type Int32 that can be used with multi-record Fetch methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.CreateWaveformCollectionSByte(System.Int64,System.Int64)">
			<summary>Create a collection of waveform objects of type SByte that can be used with multi-record Fetch methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.CreateAccumulatedWaveformCollectionDouble(System.Int64,System.Int64)">
			<summary>Create a collection of accumulated waveform objects of type Double that can be used with Fetch Accumulated Waveform methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.CreateAccumulatedWaveformCollectionInt32(System.Int64,System.Int64)">
			<summary>Create a collection of accumulated waveform objects of type Int32 that can be used with Fetch Accumulated Waveform methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.CreateWaveformDouble(System.Int64)">
			<summary>Creates a waveform object of type Double that can be used with Read and Fetch methods.</summary>
			<param name="size">Number of elements in the waveform. If zero, the driver will create a waveform with a number of samples based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.CreateWaveformInt16(System.Int64)">
			<summary>Creates a waveform object of type Int16 that can be used with Read and Fetch methods.</summary>
			<param name="size">Number of elements in the waveform. If zero, the driver will create a waveform with a number of samples based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.CreateWaveformInt32(System.Int64)">
			<summary>Creates a waveform object of type Int32 that can be used with Read and Fetch methods.</summary>
			<param name="size">Number of elements in the waveform. If zero, the driver will create a waveform with a number of samples based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.CreateWaveformSByte(System.Int64)">
			<summary>Creates a waveform object of type SByte that can be used with Read and Fetch methods.</summary>
			<param name="size">Number of elements in the waveform. If zero, the driver will create a waveform with a number of samples based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.CreateDDCWaveformCollectionComplexSampleInt16(System.Int64,System.Int64)">
			<summary>Create a collection of DDC waveform objects of struct ComplexSampleInt16 that can be used with DDCCore Fetch Waveform methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of ComplexSampleInt16 elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.CreateDDCWaveformCollectionComplexSampleInt32(System.Int64,System.Int64)">
			<summary>Create a collection of DDC waveform objects of struct ComplexSampleInt16 that can be used with DDCCore Fetch Waveform methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of ComplexSampleInt32 elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.CreateDDCRawWaveformCollectionInt16(System.Int64,System.Int64)">
			<summary>Create a collection of DDC raw waveform objects with elements of type short that can be used with DDCCore Fetch Raw Waveform methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of short elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.CreateDDCRawWaveformCollectionInt32(System.Int64,System.Int64)">
			<summary>Create a collection of DDC raw waveform objects with elements of type int that can be used with DDCCore Fetch Raw Waveform methods.</summary>
			<param name="numberOfWaveforms">The number of waveforms in the collection. If zero, the driver will create a waveform collection with a number of waveforms based on the current driver configuration.</param>
			<param name="sizePerWaveform">The number of int elements in each waveform in the collection. If zero, the driver will create each waveform with a number of elements based on the current driver configuration.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.CreateDataElementsInt32(System.Int64)">
			<summary />
			<param name="numberOfElements"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Acquisition.CreateStreamElementsInt32(System.Int64)">
			<summary />
			<param name="numberOfElements"></param>
			<returns />
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.UserControl">
			<summary>Pointer to the IAqMD3AcquisitionUserControl interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.NumberOfAverages">
			<summary>Specifies the number of waveforms to average in the record. This attribute affects instrument behavior only when the Acquisition Mode attribute is set to Averager or PeakDetection.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.TSR">
			<summary>Pointer to the IAqMD3AcquisitionTSR interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.MaxSamplesPerChannel">
			<summary>Read Only - Returns the maximum number of samples per channel that can be captured.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.NumberOfAcquiredRecords">
			<summary>Read Only - The total number of records acquired since the acquistion was last initiated. You may read the value of this property while an acquisition is in progress.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.SampleRate">
			<summary>Specifies the rate of the sample clock in samples per second.  This number represents the inverse of the interval between samples in the acquisition record.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.TimeInterleavedChannelListAuto">
			<summary>Specifies whether or not the instrument should automatically combine enabled channels to satisfy user-specified sample rates.  When set to True, the instrument will automatically combine channels to meet the sample rate requirements specified via the Sample Rate attribute.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.MinRecordSize">
			<summary>Read Only - Indicates the minimum waveform record size.  If the digitizer can support any arbitrary size record, then this attribute returns 1.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.RecordSize">
			<summary>Specifies the number of samples to acquire in each waveform record.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.NumberOfRecordsToAcquire">
			<summary>The number of waveform records to acquire. One waveform record is acquired for each recognized trigger per active channel.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.Status">
			<summary>Pointer to the IAqMD3AcquisitionStatus interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.MaxFirstValidPointValue">
			<summary>Read Only - Returns the maximum value that the First Valid Point parameter of the readout functions may assume. This value is necessary to calculate the minimum size of the required data buffer to retrieved the entire acquisition.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.Mode">
			<summary>The acquisition mode.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.DownconversionDataScalingEnabled">
			<summary>Enable or disable the factor 2 scaling of downconversion data. This scaling factor can be used to return the true input signal power of single side band signal resulting from the data downconversion with tuning. The scaling is disabled by default.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.ErrorOnOverrangeEnabled">
			<summary>When set to true, all Fetch and Read methods will return an error if the ADC was in overrange (i.e. some samples are outside of the numeric range of the ADC output).</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.Streaming">
			<summary>Reference to the IAqMD3AcquisitionStreaming interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Acquisition.DataReductionMode">
			<summary>The data reduction mode.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3AcquisitionUserControl">
			<summary>IAqMD3AcquisitionUserControl interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.ReadControlRegisterInt32(System.Int32)">
			<summary>Reads the value of the UserControl register at given offset.</summary>
			<param name="offset">Offset in the User Control FPGA where the register will be read.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.StartProcessing(Acqiris.AqMD3.UserControlProcessingType)">
			<summary>Sends the Start command for the given Processing Type.</summary>
			<param name="processingType">The type of Processing to be started.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.StartSegmentation">
			<summary>Starts the segmentation mechanism.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.StopProcessing(Acqiris.AqMD3.UserControlProcessingType)">
			<summary>Sends the Stop command for the given Processing Type.</summary>
			<param name="processingType">The type of Processing to be stopped.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.StopSegmentation">
			<summary>Stops the segmentation mechanism.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.WaitForProcessingComplete(System.String,System.Int32,System.Int32)">
			<summary>Waits until the given Processing Type is complete. If this processing is not currently running, this function returns immediately. If the processing does not complete within the time period the user specified with the MaxTimeMilliseconds parameter, the function returns the Max Time Exceeded error.</summary>
			<param name="logicDevice">Specifies the LogicDevice this function has to wait upon. It must be equal to one of the LogicDevice repeated capability string.</param>
			<param name="processingType">The type of Processing to be waited upon.</param>
			<param name="maxTimeMilliseconds">Specifies the maximum time the end-user allows for this function to complete. The units are milliseconds. Defined values: IviDigitizerTimeOutInfinite (-1) - The function waits indefinitely for the acquisition to complete.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.WriteControlRegisterInt32(System.Int32,System.Int32)">
			<summary>Writes the given Value to the User Control register at given Offset.</summary>
			<param name="offset">Offset in the User Control FPGA where the register will be written.</param>
			<param name="value">Value to write to the register.</param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.IOFixedLatencyEnabled">
			<summary>Specifies whether the IO input is propagated to the DPUs with potentially variable latency or with guaranteed fixed latency.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.CountersMode">
			<summary>Specifies the Counters Mode.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.InterSegmentDelayMode">
			<summary>Specifies how the Inter Segment Delay is managed. In Software mode, the Inter Segment Delay is given as a fixed number of blocks, in the Inter Segment Delay Value attribute. In Firmware mode, the Inter Segment Delay is controlled directly by the User Firmware.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.InterSegmentDelayValue">
			<summary>Number of Inter Segments Delay blocks.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.PostTrigger">
			<summary>Number of Post-Trigger blocks.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.PreTrigger">
			<summary>Number of Pre-Trigger blocks.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.TriggerEnableSource">
			<summary>Specifies the Source of the Trigger Enable, either from the Segmentation mechanism, or from the User Firmware.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.TriggerFactor">
			<summary>Multiplicative factor for the PreTrigger and PostTrigger values, to be used with downsampling. Default value 1.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.TriggerSelection">
			<summary>Specifies the source of the Trigger, either from the analog circuitry, or from the digital user firmware.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.StartOnTriggerEnabled">
			<summary>Specifies whether the segmentation mechanism should work in Start On Trigger mode, or not. While in Start On Trigger mode, the PreTrigger value is ignored.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionUserControl.ConnectorToUserCoreLatency">
			<summary>Returns the duration between the time the signal is present on a connector, and the time the corresponding sample enters the user core.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3AcquisitionTSR">
			<summary>IAqMD3AcquisitionTSR interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3AcquisitionTSR.Continue">
			<summary>Marks the acquired (single- or multi-record) waveform currently available for fetching as no longer needed (e.g. once it has been read). This allows the corresponding memory segment(s) to be released and made available for new acquisitions.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionTSR.Enabled">
			<summary>Specifies whether TSR operation is enabled on the instrument.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionTSR.IsAcquisitionComplete">
			<summary>Read Only - Indicates if a (single- or multi-record) waveform can be fetched from the instrument. Applicable only when TSR operation is enabled.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionTSR.MemoryOverflowOccurred">
			<summary>Read Only - Indicates that no memory segment was available to acquire new data. The instrument could therefore not accept any new triggers, and some may have been missed.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3AcquisitionStatus">
			<summary>IVI Digitizer class-compliant acquistion status interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionStatus.IsIdle">
			<summary>Read Only - Returns whether the device is currently in the Idle state.  If the driver cannot query the digitizer to return its state, the driver returns the value Unknown.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionStatus.IsMeasuring">
			<summary>Read Only - Returns whether the device is currently in the Measuring state.  If the driver cannot query the digitizer to return its state, the driver returns the value Unknown.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionStatus.IsWaitingForTrigger">
			<summary>Read Only - Returns whether the device is currently in the Waiting For Trigger state.  If the driver cannot query the digitizer to return its state, the driver returns the value Unknown.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3Stream">
			<summary>Root interface for the Stream repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Stream.FetchDataInt32(System.Int64,Acqiris.AqMD3.IAqMD3StreamElements`1)">
			<summary>This function returns a stream of Elements. The ElementSizeInBits and the meaning of each Element depend on the StreamType.If there are not as many elements available to be fetched as nbrElementsToFetch, the current number of elements that are available will be returned as AvailableElements.</summary>
			<param name="nbrElementsToFetch">Specifies the maximum number of Elements to be retrieved from the instrument. The Element size is 32 bits. NbrElementsToFetch must be an integer multiple of GranularityInBytes / 4 and it must not exceed MaxSizeInBytes / 4.</param>
			<param name="elements"></param>
			<returns />
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Stream.Markers">
			<summary>Pointer to the IAqMD3StreamMarkers interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Stream.MinMax">
			<summary>Pointer to the IAqMD3StreamMinMax interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Stream.Samples">
			<summary>Pointer to the IAqMD3StreamSamples interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Stream.Type">
			<summary>Indicates the type of the stream.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Stream.Enabled">
			<summary>Specifies whether the stream is enabled on the instrument.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Stream.GranularityInBytes">
			<summary>Indicates the granularity of data for the FetchData operations.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Stream.MaxSizeInBytes">
			<summary>Indicates the maximal size of data for the FetchData operations.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3StreamCollection">
			<summary>Collection interface for the Stream repeated capability.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3StreamMarkers">
			<summary>IAqMD3StreamMarkers interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3StreamMarkers.BitsPerMarker">
			<summary>Number of bits representing a Marker value.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3StreamMarkers.FractionalBits">
			<summary>Number of fractional bits in the Marker value.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3StreamMinMax">
			<summary>IAqMD3StreamMinMax interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3StreamMinMax.FrameSize">
			<summary>Number of samples over which each MimMax pair is computed.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3StreamSamples">
			<summary>IAqMD3StreamSamples interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3StreamSamples.DataEmulationEnabled">
			<summary>Specifies whether the Data Emulation is enabled. If True, the output data are fetched from an internal ramp waveform generator. If False, the output data are fetched from the digitizer ADC stream.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3StreamSamples.DataEmulationRate">
			<summary>Specifies the emulated data rate in samples per seconds. Ignored if the Data Emulation is disabled.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3StreamSamples.DataTruncationEnabled">
			<summary>Specifies whether the Data Truncation is enabled.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3StreamSamples.DataTruncationBitCount">
			<summary>Specifies the size in bits of an output stream Element. Ignored if DataTruncationEnabled is False.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3StreamSamples.DataTruncationKeepMsb">
			<summary>Specifies whether the output stream Element contains the most significant or the least significant bits of the raw digitizer data sample. Ignored if DataTruncationEnabled is False.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3StreamSamples.BitsPerSample">
			<summary>Returns the number of bits per sample.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3Private">
			<summary>IAqMD3Private interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Private.WriteReg32(System.Int32,System.Int64,System.Int32)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="spaceAddress">This function is private and for Acqiris-internal use only.</param>
			<param name="registerAddress">This function is private and for Acqiris-internal use only.</param>
			<param name="value">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Private.ReadReg32(System.Int32,System.Int64)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="spaceAddress">This function is private and for Acqiris-internal use only.</param>
			<param name="registerAddress">This function is private and for Acqiris-internal use only.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Private.ReadBurstInt32(System.Int32,System.Int64,System.Int64,Acqiris.AqMD3.IAqMD3DataElements`1)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="spaceAddress">This function is private and for Acqiris-internal use only.</param>
			<param name="registerAddress">This function is private and for Acqiris-internal use only.</param>
			<param name="numberOfElements">This function is private and for Acqiris-internal use only.</param>
			<param name="elements"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Private.WriteBurstInt32(System.Int32,System.Int64,System.Int32[])">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="spaceAddress">This function is private and for Acqiris-internal use only.</param>
			<param name="registerAddress">This function is private and for Acqiris-internal use only.</param>
			<param name="dataArray">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Private.PrivateCalibration">
			<summary>This interface is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Private.PrivateFirmwares">
			<summary>This interface is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Private.PrivateStores">
			<summary>This interface is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Private.PrivateAccessPassword">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration">
			<summary>IAqMD3PrivatePrivateCalibration interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.GetCalibrationArraySize(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.GetCalibrationArrayInt32(System.String,System.Int32[]@)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="values"></param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.SetCalibrationArrayInt32(System.String,System.Int32[])">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="values"></param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.GetCalibrationArrayReal64(System.String,System.Double[]@)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="values"></param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.SetCalibrationArrayReal64(System.String,System.Double[])">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="values"></param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.GetCalibrationValueInt32(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name">This function is private and for Acqiris-internal use only.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.SetCalibrationValueInt32(System.String,System.Int32)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name">This function is private and for Acqiris-internal use only.</param>
			<param name="value">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.SetCalibrationValueString(System.String,System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name">This function is private and for Acqiris-internal use only.</param>
			<param name="value">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.GetCalibrationValueString(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name">This function is private and for Acqiris-internal use only.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.SetCalibrationValueBoolean(System.String,System.Boolean)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name">This function is private and for Acqiris-internal use only.</param>
			<param name="value">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.GetCalibrationValueBoolean(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name">This function is private and for Acqiris-internal use only.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.GetCalibrationValueReal64(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name">This function is private and for Acqiris-internal use only.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.SetCalibrationValueReal64(System.String,System.Double)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name">This function is private and for Acqiris-internal use only.</param>
			<param name="value">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.GetCalibrationArrayInt16(System.String,System.Int16[]@)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="values"></param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.SetCalibrationArrayInt16(System.String,System.Int16[])">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="values"></param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.UserSignal">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivatePrivateCalibration.PrivateCalibrationSteps">
			<summary>This interface is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3PrivateFirmware">
			<summary>Root interface for the PrivateFirmware repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivateFirmware.LoadFromFile(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="path">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3PrivateFirmwareCollection">
			<summary>Collection interface for the PrivateFirmware repeated capability.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3PrivateStore">
			<summary>Root interface for the PrivateStore repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivateStore.LoadFromFile(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="path">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivateStore.SaveToFile(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="path">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivateStore.LoadFromAttributes">
			<summary>This function is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivateStore.ReadAttributes">
			<summary>This function is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivateStore.BarCode">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivateStore.PartNumber">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivateStore.PartNumberRevision">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivateStore.SerialNumber">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivateStore.ProductionDate">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivateStore.TestDate">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivateStore.CompatibleWith">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3PrivateStoreCollection">
			<summary>Collection interface for the PrivateStore repeated capability.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivateStoreCollection.EepromModuleGeneration">
			<summary>This interface is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3PrivateStoresEepromModuleGeneration">
			<summary>IAqMD3PrivateStoresEepromModuleGeneration interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivateStoresEepromModuleGeneration.SaveToFile(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="path">This function is private and for Acqiris-internal use only.</param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivateStoresEepromModuleGeneration.SerialNumber">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivateStoresEepromModuleGeneration.Options">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivateStoresEepromModuleGeneration.TestedDriverVersion">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivateStoresEepromModuleGeneration.MaximumDriverVersion">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3Channel">
			<summary>Root interface for the Channel repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Channel.Configure(System.Double,System.Double,Acqiris.AqMD3.VerticalCoupling,System.Boolean)">
			<summary>This function configures the most commonly configured attributes of the digitizer channel sub-system. These attributes are the range, offset, coupling, probe attenuation, and whether the channel is enabled.</summary>
			<param name="range">Specifies the vertical range. This value sets the Vertical Range property.</param>
			<param name="offset">Specifies the vertical offset. This value sets the Vertical Offset property.</param>
			<param name="coupling">Specifies how to couple the input signal. This value sets the Vertical Coupling property.</param>
			<param name="enabled">Specifies if the channel is enabled for acquisition. This value sets the Channel Enabled property.</param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.DataInversionEnabled">
			<summary>Specifies whether the data acquired is inverted.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.Accumulation">
			<summary>Pointer to the IAqMD3ChannelAccumulation interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.PeakDetection">
			<summary>Pointer to the IAqMD3ChannelPeakDetection interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.Measurement">
			<summary>Pointer to the IAqMD3ChannelMeasurement interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.Coupling">
			<summary>Specifies how the digitizer couples the input signal for the channel.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.InputImpedance">
			<summary>The input impedance of this channel.  The units are Ohms.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.Range">
			<summary>The absolute value of the input range the digitizer can acquire for the channel.  The units are Volts.  For example, to acquire a sine wave spanning -5.0 to 5.0 volts, set Range to 10.0 volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.Offset">
			<summary>The location of the center of the range that you specify with the Range attribute.  The units are Volts, with respect to ground.  For example, to acquire a sine wave spanning 0.0 to 10.0 volts, set Offset to 5.0 volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.Filter">
			<summary>Pointer to the IAqMD3ChannelFilter interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.Enabled">
			<summary>Specifies whether the digitizer acquires a waveform for the channel.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.Temperature">
			<summary>Read Only - Indicates the temperature of the channel.  The units are governed by the Temperature Units attribute.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.TimeInterleavedChannelList">
			<summary>This attribute is used to combine this channel with one or more other channels to achieve higher effective sampling rates and/or greater memory depth.  The string provided here specifies which channels should operate in combined mode with the current channel.  This attribute is a comma-separated list of one or more channel names.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.InputConnectorSelection">
			<summary>Some digitizers include multiple connectors for each digitizer input channel.  These connectors are often simply a matter of convenience for system cabling ? multiple signals can be routed to the various connectors, the the desired signal can be sent into the digitizer by changing an internal switch.  With other digitizers, the connectors may be of different types or even different impedances.  This attribute is used to determine which connector is to be used.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.MultiRecordMeasurement">
			<summary>Pointer to the IAqMD3ChannelMultiRecordMeasurement interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.ConnectorName">
			<summary>Read Only - The connector name as it appears on the instrument's front panel.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.CalibrationTargetVoltage">
			<summary>The value of CalibrationTargetVoltage is the channel input level at which the noise level will be minimized by the self-calibration. This value is only used if the property Calibration.TargetVoltageEnabled is true. The units are Volts. Note that when Calibration.TargetVoltageEnabled is set to true, changing this value, or changing the Channel.Offset, will require a new self-calibration.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.BaselineCorrection">
			<summary>Reference to the IAqMD3ChannelBaselineCorrection interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.ZeroSuppress">
			<summary>Reference to the IAqMD3ChannelZeroSuppress interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.PeakList">
			<summary>Reference to the IAqMD3ChannelPeakList interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Channel.SamplingDelay">
			<summary>The delay in seconds at which the sample is acquired from the input signal, compared to other channels.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3ChannelCollection">
			<summary>Collection interface for the Channel repeated capability.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3ChannelAccumulation">
			<summary>IAqMD3ChannelAccumulation interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelAccumulation.NSA">
			<summary>Pointer to the IAqMD3ChannelAccumulationNSA interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelAccumulation.BaselineCorrection">
			<summary>Pointer to the IAqMD3ChannelAccumulationBaselineCorrection interface.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3ChannelAccumulationNSA">
			<summary>IAqMD3ChannelAccumulationNSA interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelAccumulationNSA.Configure(System.Boolean,System.Int32,System.Int32)">
			<summary>Configures the Noise Suppressed Accumulation properties.</summary>
			<param name="enabled">Specifies whether the Noise Suppressed Accumulation is active. This value sets the Enabled property.</param>
			<param name="threshold">Specifies the threshold of the Noise Suppressed Accumulation. Each data value must exceed the threshold value to be entered into the sum. The units are ADC counts. This value sets the Threshold property.</param>
			<param name="noiseBase">Specifies the noise base value for the Noise Suppressed Accumulation. The noise base is subtracted from data values which are higher than the configured threshold. The units are ADC counts. This value sets the Noise Base property.</param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelAccumulationNSA.Enabled">
			<summary>Specifies whether the Noise Suppressed Accumulation is active. This attribute affects instrument behavior only when the Acquisition Mode attribute is set to Averager.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelAccumulationNSA.NoiseBase">
			<summary>Specifies the noise base value for the Noise Suppressed Accumulation. The noise base is subtracted from data values which are higher than the configured threshold. The units are ADC counts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelAccumulationNSA.Threshold">
			<summary>Specifies the threshold of the Noise Suppressed Accumulation. Each data value must exceed the threshold value to be entered into the sum. The units are ADC counts.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3ChannelAccumulationBaselineCorrection">
			<summary>IAqMD3ChannelAccumulationBaselineCorrection interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelAccumulationBaselineCorrection.Configure(Acqiris.AqMD3.BaselineCorrectionMode,System.Int32,System.Int32,System.Int32)">
			<summary>Configures the baseline correction properties.</summary>
			<param name="mode">Defines the mode used during baseline correction accumulation. This value sets the Mode property.</param>
			<param name="thresholdHigh">Defines the higher limit of the baseline range. Outside of this range, data values will be ignored. This is an absolute value (from 0 to vertical range). The units are ADC counts. This value sets the ThresholdHigh property.</param>
			<param name="thresholdLow">Defines the lower limit of the baseline range. Outside of this range, data values will be ignored. This is an absolute value (from 0 to vertical range). The units are ADC counts. This value sets the ThresholdLow property.</param>
			<param name="digitalOffset">Applies a digital offset after the baseline correction. This value sets the DigitalOffset property.</param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelAccumulationBaselineCorrection.Mode">
			<summary>Defines the mode used during baseline correction accumulation.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelAccumulationBaselineCorrection.ThresholdHigh">
			<summary>Defines the higher limit of the baseline range. Outside of this range, data values will be ignored. This is an absolute value (from 0 to vertical range). The units are ADC counts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelAccumulationBaselineCorrection.ThresholdLow">
			<summary>Defines the lower limit of the baseline range. Outside of this range, data values will be ignored. This is an absolute value (from 0 to vertical range). The units are ADC counts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelAccumulationBaselineCorrection.DigitalOffset">
			<summary>Applies a digital offset after the baseline correction.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3ChannelPeakDetection">
			<summary>IAqMD3ChannelPeakDetection interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelPeakDetection.Configure(System.Int32,System.Int32,System.Boolean)">
			<summary>Configures the Peak Detection properties.</summary>
			<param name="risingDelta">Defines the amount by which two consecutive samples must differ to be considered as rising edge in the peak detector algorithm. The units are ADC counts. This value sets the Rising Delta property.</param>
			<param name="fallingDelta">Defines the amount by which two consecutive samples must differ to be considered as falling edge in the peak detector algorithm. The units are ADC counts. This value sets the Falling Delta property.</param>
			<param name="amplitudeAccumulationEnabled">Selects whether the amplitude value of the peak (in ADC counts) should be accumulated instead of the fixed value 1 during a peak detection. This value sets the Amplitude Accumulation Enabled property.</param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelPeakDetection.RisingDelta">
			<summary>Defines the amount by which two consecutive samples must differ to be considered as rising edge in the peak detector algorithm. The units are ADC counts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelPeakDetection.FallingDelta">
			<summary>Defines the amount by which two consecutive samples must differ to be considered as falling edge in the peak detector algorithm. The units are ADC counts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelPeakDetection.AmplitudeAccumulationEnabled">
			<summary>Selects whether the amplitude value of the peak (in ADC counts) should be accumulated instead of a fixed value of 1 for a detected peak.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3ChannelMeasurement">
			<summary>IAqMD3ChannelMeasurement interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelMeasurement.FetchWaveform(Ivi.Driver.IWaveform`1)">
			<summary>Returns the waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelMeasurement.FetchWaveform(Ivi.Driver.IWaveform`1)">
			<summary>Returns the waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelMeasurement.FetchWaveform(Ivi.Driver.IWaveform`1)">
			<summary>Returns the waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelMeasurement.FetchWaveform(Ivi.Driver.IWaveform`1)">
			<summary>Returns the waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelMeasurement.ReadWaveform(Ivi.Driver.PrecisionTimeSpan,Ivi.Driver.IWaveform`1)">
			<summary>Initiates an acquisition on the channels that the end-user configures with the ConfigureChannel method.</summary>
			<param name="maximumTime">Specifies the maximum time the end-user allows for this method to complete.</param>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelMeasurement.ReadWaveform(Ivi.Driver.PrecisionTimeSpan,Ivi.Driver.IWaveform`1)">
			<summary>Initiates an acquisition on the channels that the end-user configures with the ConfigureChannel method.</summary>
			<param name="maximumTime">Specifies the maximum time the end-user allows for this method to complete.</param>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelMeasurement.ReadWaveform(Ivi.Driver.PrecisionTimeSpan,Ivi.Driver.IWaveform`1)">
			<summary>Initiates an acquisition on the channels that the end-user configures with the ConfigureChannel method.</summary>
			<param name="maximumTime">Specifies the maximum time the end-user allows for this method to complete.</param>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelMeasurement.ReadWaveform(Ivi.Driver.PrecisionTimeSpan,Ivi.Driver.IWaveform`1)">
			<summary>Initiates an acquisition on the channels that the end-user configures with the ConfigureChannel method.</summary>
			<param name="maximumTime">Specifies the maximum time the end-user allows for this method to complete.</param>
			<param name="waveform">The waveform object into which the measurement data is stored. The waveform memory may be allocated before calling this method, or during the call to this method.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelMeasurement.FetchAccumulatedWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Acqiris.AqMD3.IAqMD3AccumulatedWaveformCollection`1)">
			<summary />
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return. This number may be larger than the amount of data available.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads. The waveform collection memory may be allocated before calling this method, or during the call to this method. To allocate memory before calling this method, create a waveform collection object using the Create Waveform Collection method and set the waveforms parameter to that waveform collection. To allocate memory during the call to this method, set the waveforms parameter to (IWaveformCollection&lt;Int32&gt;)null. Note that this is critically different than setting waveforms to null, which generates a build error.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelMeasurement.FetchAccumulatedWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Acqiris.AqMD3.IAqMD3AccumulatedWaveformCollection`1)">
			<summary />
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return. This number may be larger than the amount of data available.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads. The waveform collection memory may be allocated before calling this method, or during the call to this method. To allocate memory before calling this method, create a waveform collection object using the Create Waveform Collection method and set the waveforms parameter to that waveform collection. To allocate memory during the call to this method, set the waveforms parameter to (IWaveformCollection&lt;Double&gt;)null. Note that this is critically different than setting waveforms to null, which generates a build error.</param>
			<returns />
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3ChannelFilter">
			<summary>IVI Digitizer class-compliant channel filter interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelFilter.Configure(System.Double,System.Double)">
			<summary>This function is used to configure the minimum and maximum input filter frequencies for a specified channel.</summary>
			<param name="minFrequency">Specifies the minimum input filter frequency.  This value sets the Input Filter Min Frequency attribute.  See the attribute description for more details.</param>
			<param name="maxFrequency">Specifies the maximum input filter frequency.  This value sets the Input Filter Max Frequency attribute.  See the attribute description for more details.</param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelFilter.MaxFrequency">
			<summary>Specifies the maximum input filter frequency.  Specifying a value of zero means that the device should be set to the full bandwidth that the filter can deliver without being bypassed.  The units are Hertz.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelFilter.MinFrequency">
			<summary>Specifies the minimum input filter frequency.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelFilter.Bypass">
			<summary>Specifies whether or not to bypass the input filter.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelFilter.BypassAntiAliasing">
			<summary>Specifies whether or not to bypass the anti-aliasing input filter. BypassMovingAverage and BypassAntiAliasing cannot be both False at the same time.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelFilter.BypassMovingAverage">
			<summary>Specifies whether or not to bypass the moving average input filter. BypassMovingAverage and BypassAntiAliasing cannot be both False at the same time.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3ChannelMultiRecordMeasurement">
			<summary>IVI Digitizer class-compliant multi-record measurement interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelMultiRecordMeasurement.FetchMultiRecordWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Ivi.Digitizer.IWaveformCollection`1)">
			<summary>Returns the (multi-record) waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads. The waveform collection memory may be allocated before calling this method, or during the call to this method. To allocate memory before calling this method, create a waveform collection object using the Create Waveform Collection method and set the waveforms parameter to that waveform collection. To allocate memory during the call to this method, set the waveforms parameter to (IWaveformCollection&lt;Double&gt;)null. Note that this is critically different than setting waveforms to null, which generates a build error.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelMultiRecordMeasurement.FetchMultiRecordWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Ivi.Digitizer.IWaveformCollection`1)">
			<summary>Returns the (multi-record) waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads. The waveform collection memory may be allocated before calling this method, or during the call to this method. To allocate memory before calling this method, create a waveform collection object using the Create Waveform Collection method and set the waveforms parameter to that waveform collection. To allocate memory during the call to this method, set the waveforms parameter to (IWaveformCollection&lt;Int16&gt;)null. Note that this is critically different than setting waveforms to null, which generates a build error.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelMultiRecordMeasurement.FetchMultiRecordWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Ivi.Digitizer.IWaveformCollection`1)">
			<summary>Returns the (multi-record) waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads. The waveform collection memory may be allocated before calling this method, or during the call to this method. To allocate memory before calling this method, create a waveform collection object using the Create Waveform Collection method and set the waveforms parameter to that waveform collection. To allocate memory during the call to this method, set the waveforms parameter to (IWaveformCollection&lt;Int32&gt;)null. Note that this is critically different than setting waveforms to null, which generates a build error.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelMultiRecordMeasurement.FetchMultiRecordWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Ivi.Digitizer.IWaveformCollection`1)">
			<summary>Returns the (multi-record) waveform the digitizer acquired for the specified channel. The waveform is from a previously initiated acquisition.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads. The waveform collection memory may be allocated before calling this method, or during the call to this method. To allocate memory before calling this method, create a waveform collection object using the Create Waveform Collection method and set the waveforms parameter to that waveform collection. To allocate memory during the call to this method, set the waveforms parameter to (IWaveformCollection&lt;SByte&gt;)null. Note that this is critically different than setting waveforms to null, which generates a build error.</param>
			<returns />
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3Trigger">
			<summary>IAqMD3Trigger interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Trigger.SendSoftwareTrigger">
			<summary>Refer to IVI-3.3: Standard Cross-Class Capabilities Specification for the prototype and complete description of this function.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Trigger.Sources">
			<summary>Pointer to the IAqMD3TriggerSources interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Trigger.Holdoff">
			<summary>Specifies the length of time the digitizer waits after it detects a trigger until the digitizer enables the trigger subsystem to detect another trigger. The units are seconds. The Trigger Holdoff attribute affects instrument operation only when the digitizer requires multiple acquisitions to build a complete waveform. If Trigger Holdoff and PreTriggerSamples are are both non-zero, then both conditions must be satisfied before the digitizer will accept a trigger.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Trigger.ActiveSource">
			<summary>Specifies the source the digitizer monitors for the trigger event. The value specified here must be one of the valid repeated capability names for the TriggerSource repeated capability.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Trigger.Delay">
			<summary>Specifies the length of time from the trigger event to the first point in the waveform record. If the value is positive, the first point in the waveform record occurs after the trigger event. If the value is negative, the first point in the waveform record occurs before the trigger event. The units are seconds.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Trigger.OutputEnabled">
			<summary>Specifies whether or not an accepted trigger appears at an output of the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Trigger.Output">
			<summary>Pointer to the IAqMD3TriggerOutput interface.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3TriggerSource">
			<summary>Root interface for the TriggerSource repeated capability.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerSource.SelfTrigger">
			<summary>Pointer to the IAqMD3TriggerSourceSelfTrigger interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerSource.Coupling">
			<summary>Specifies how the digitizer couples the trigger source.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerSource.Hysteresis">
			<summary>Specifies the trigger hysteresis in Volts.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerSource.Level">
			<summary>Specifies the voltage threshold for the trigger sub-system. The units are Volts. This attribute affects instrument behavior only when the Trigger Type is set to one of the following values: Edge Trigger, Glitch Trigger, or Width Trigger.
This attribute, along with the Trigger Slope, Trigger Source, and Trigger Coupling attributes, defines the trigger event when the Trigger Type is set to Edge Trigger.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerSource.Type">
			<summary>The kind of event that triggers the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerSource.Edge">
			<summary>Pointer to the IAqMD3TriggerEdge interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerSource.Magnitude">
			<summary>Pointer to the IAqMD3TriggerSourceMagnitude interface.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3TriggerSourceCollection">
			<summary>Collection interface for the TriggerSource repeated capability.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3TriggerSourceSelfTrigger">
			<summary>IAqMD3TriggerSourceSelfTrigger interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3TriggerSourceSelfTrigger.AbortGeneration">
			<summary>Stops the generation of the self-trigger signal previously initiated.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3TriggerSourceSelfTrigger.InitiateGeneration">
			<summary>Starts the generation of the self-trigger signal.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerSourceSelfTrigger.SquareWave">
			<summary>Pointer to the IAqMD3TriggerSourceSelfTriggerSquareWave interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerSourceSelfTrigger.CustomWave">
			<summary>Pointer to the IAqMD3TriggerSourceSelfTriggerCustomWave interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerSourceSelfTrigger.Mode">
			<summary>Defines the self-trigger signal generation mode.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerSourceSelfTrigger.PulseDuration">
			<summary>Defines the duration of the pulse generated by the Self Trigger configured in Armed Pulse mode.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3TriggerSourceSelfTriggerSquareWave">
			<summary>IAqMD3TriggerSourceSelfTriggerSquareWave interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3TriggerSourceSelfTriggerSquareWave.Configure(System.Double,System.Double,Acqiris.AqMD3.TriggerSlope)">
			<summary>Configures the square wave signal properties of the self-trigger generator. Calling this function will automatically set the self-trigger mode to Square Wave.</summary>
			<param name="frequency">Specifies the frequency of the self-trigger square wave signal. The units are Hertz. This value sets the Frequency property.</param>
			<param name="dutyCycle">Configures the duty cycle of the self trigger square wave signal. Behavior depends on the configuration of the Slope property (e.g. if Slope is set to positive DutyCycle defines the percentage that the square wave is in the high state). Units are percentage of the period. This value sets the Duty Cycle property.</param>
			<param name="slope">Specifies whether a rising or a falling edge of the generated waveform triggers the digitizer. This value sets the Slope property.</param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerSourceSelfTriggerSquareWave.DutyCycle">
			<summary>Configures the duty cycle of the self trigger square wave signal. Behavior depends on the configuration of the Slope property (e.g. if Slope is set to positive DutyCycle defines the percentage that the square wave is in the high state). Units are percentage of the period.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerSourceSelfTriggerSquareWave.Frequency">
			<summary>Specifies the frequency of the self-trigger square wave signal. The units are Hertz.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerSourceSelfTriggerSquareWave.Slope">
			<summary>Specifies whether a rising or a falling edge of the generated waveform triggers the digitizer.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3TriggerSourceSelfTriggerCustomWave">
			<summary>IAqMD3TriggerSourceSelfTriggerCustomWave interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3TriggerSourceSelfTriggerCustomWave.LoadConfigurationFile(System.String)">
			<summary>Loads the configuration for the self-trigger generator from a specified configuration file. Calling this function will automatically set the self-trigger mode to Custom Wave.</summary>
			<param name="path">Path to the self-trigger generator configuration file to load.</param>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3TriggerEdge">
			<summary>IVI Digitizer class-compliant edge triggering interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3TriggerEdge.Configure(System.Double,Acqiris.AqMD3.TriggerSlope)">
			<summary>This function sets the edge triggering attributes. An edge trigger occurs when the trigger signal that the end-user specifies with the Source parameter passes through the voltage threshold that the end-user specifies with the level parameter and has the slope that the end-user specifies with the Slope parameter.  This function affects instrument behavior only if the Trigger Type is Edge Trigger. Set the Trigger Type and Trigger Coupling before calling this function.  If the trigger source is one of the analog input channels, an application program should configure the vertical range, vertical coupling, probe attenuation, and the maximum input frequency before calling this function.</summary>
			<param name="level">Specifies the trigger level. This value sets the Trigger Level attribute.</param>
			<param name="slope">Specifies the trigger slope. This value sets the Trigger Slope attribute.</param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerEdge.Slope">
			<summary>Specifies whether a rising or a falling edge triggers the digitizer.  This attribute affects instrument operation only when the Trigger Type attribute is set to Edge Trigger.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3TriggerSourceMagnitude">
			<summary>IAqMD3TriggerSourceMagnitude interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3TriggerSourceMagnitude.Configure(System.Double,System.Double,Acqiris.AqMD3.TriggerSlope)">
			<summary>This function sets the magnitude triggering attributes when used with a down-converted Digital Downconverter (DDC) signal. The magnitude trigger function operates in a similar manner to an edge trigger in that it triggers when the Threshold value is passed in the selected Slope direction, but in this case the signal is the magnitude value of the complex down-converted DDC signal. Set Acquisition.Mode = Downconverter and trigger Type = Magnitude before calling this function. The trigger source must be one of the analog input channels, an application program should configure the vertical range, vertical coupling, probe attenuation, and the maximum input frequency before calling this function.</summary>
			<param name="level">Specifies the trigger level. This value sets the Trigger Level attribute.</param>
			<param name="hysteresis">Specifies the trigger hysteresis in Volts. This value sets the Trigger Hysteresis attribute.</param>
			<param name="slope">Specifies the trigger slope. This value sets the Trigger Slope attribute.</param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerSourceMagnitude.DwellTimeSamples">
			<summary>Positive values of dwell time indicate the number of samples that must be in the initial trigger state (e.g. below the low threshold for a rising edge trigger) before a trigger will be recognized.  Negative values of dwell time indicate the number of samples that must be in the second trigger state before a trigger is recognized.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerSourceMagnitude.Slope">
			<summary>Specifies whether a rising (Positive) or a falling (Negative) magnitude triggers the digitizer.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3TriggerOutput">
			<summary>IAqMD3TriggerOutput interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerOutput.Offset">
			<summary>Specifies the offset in Volts at the trigger output of the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerOutput.Enabled">
			<summary>Specifies whether or not an accepted trigger appears at an output of the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TriggerOutput.Source">
			<summary>Select the trigger signal to drive the trigger output connector on the front panel.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3LogicDevice">
			<summary>Root interface for the LogicDevice repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3LogicDevice.WriteStreamWaveformInt8(System.Int32,System.Byte[])">
			<summary>Writes an array of Samples into a given Stream to be emulated.</summary>
			<param name="stream">One-based index in the list of Streams.</param>
			<param name="samples">Array containing the Samples to upload into the Stream.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3LogicDevice.PlaybackStreamWaveforms">
			<summary>Starts playback of emulation data. The waveforms previously loaded (e.g. through WriteStreamWaveformInt16 function) will be started synchronously and played on all streams according to the stream mode.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3LogicDevice.LoadFromFile(System.String)">
			<summary>Load the bitfile to the logic device.</summary>
			<param name="path">Specifies the path of the bitfile location.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3LogicDevice.ReadIndirectInt32(System.Int32,System.Int64,System.Int64,Acqiris.AqMD3.IAqMD3DataElements`1)">
			<summary>Reads up to NumElements 32 bit integers of the Indirect Buffer with identifier Id from the FPGA identified by LogicDevice repeated capability into the memory referenced by Data.</summary>
			<param name="id">The firmware indirect buffer id.</param>
			<param name="startAddress">The start address in the FPGA where the data will be read.</param>
			<param name="numElements">Number of elements to read.</param>
			<param name="elements"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3LogicDevice.ReadRegisterInt32(System.Int64)">
			<summary>Reads a 32 bits integer value from the register at Offset in the FPGA identified by LogicDevice repeated capability.</summary>
			<param name="offset">Address in the FPGA where the register will be read.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3LogicDevice.WriteIndirectInt32(System.Int32,System.Int64,System.Int64,System.Int32[])">
			<summary>Writes the contents of Data to the Indirect Buffer with identifier Id of the FPGA identified by LogicDevice repeated capability.</summary>
			<param name="id">The firmware indirect buffer id.</param>
			<param name="startAddress">The start address in the FPGA where the data will be written.</param>
			<param name="numElements">Number of elements to write.</param>
			<param name="data">Buffer containing data to write into the firmware indirect buffer.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3LogicDevice.WriteRegisterInt32(System.Int64,System.Int32)">
			<summary>Writes the 32 bits integer value Value to the register at Offset in the FPGA identified by LogicDevice repeated capability.</summary>
			<param name="offset">Address in the FPGA where the register will be written.</param>
			<param name="value">Value to write into the register.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3LogicDevice.ConfigureBufferAddresses(System.Int32,Acqiris.AqMD3.BufferAddresses)">
			<summary>Configures the indirect Buffer Addresses.</summary>
			<param name="bufferId">The firmware indirect buffer id. Only buffers 16 to 31 can be configured.</param>
			<param name="addresses">The firmware indirect buffer base address.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3LogicDevice.GetBufferAddresses(System.Int32)">
			<summary>Retrieves the indirect Buffer Addresses.</summary>
			<param name="bufferId">The firmware indirect buffer id. Only buffers 16 to 31 can be retrieved.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3LogicDevice.GetCoreVersion(Acqiris.AqMD3.LogicDeviceCore)">
			<summary>Retrieves the Version of the given Core.</summary>
			<param name="coreId">The firmware Core Identifier.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3LogicDevice.WriteFirmwareStoreFromFile(System.Int32,System.String)">
			<summary>Stores in the given Firmware Config the Firmware from given File.</summary>
			<param name="firmwareStore">One-based index in the list of Firmware Stores.</param>
			<param name="path">Path to the file containing the Firmware.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3LogicDevice.WriteStreamWaveformInt16(System.Int32,System.Int16[])">
			<summary>Writes an array of Samples into a given Stream to be emulated.</summary>
			<param name="stream">One-based index in the list of Streams.</param>
			<param name="samples">Array containing the Samples to upload into the Stream.</param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3LogicDevice.FirmwareStoreCount">
			<summary>Read Only - Number of available firmware stores in the LogicDevice.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3LogicDevice.MemoryBanks">
			<summary>Pointer to the IAqMD3LogicDeviceMemoryBanks interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3LogicDevice.SamplesUnsigned">
			<summary>When True, directs the LogicDevice to receive unsigned samples values from the ADC.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3LogicDevice.StreamMode">
			<summary>Specifies the mode the Streams are operating in.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3LogicDevice.StreamsCount">
			<summary>Read Only - Number of Streams available in the LogicDevice.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3LogicDevice.LoadFromStoreEccWarningOccurred">
			<summary>Read Only [FDK Only] - A True value indicates that during the last retrieve operation from a Firmware Store, the ECC system detected and corrected one or more errors in the stored firmware. Such retrieve operations occur either at initialization (when specified in the initialization options), or when writing a Firmware Store from a file (the written firmware is immediately re-read as an operation success check).The ECC system corrects such errors, however when they occur it is advised to re-write the Firmware Store as a preventive measure. As the number of errors increases, the firmware eventually becomes impossible to correct. A False value indicates that no error was detected during the last retrieve operation from a Firmware Store.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3LogicDeviceCollection">
			<summary>Collection interface for the LogicDevice repeated capability.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3LogicDeviceMemoryBank">
			<summary>Root interface for the LogicDeviceMemoryBank repeated capability.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3LogicDeviceMemoryBank.AccessControl">
			<summary>Specifies how the MemoryBank accesses are controlled. This value is used only when the Acquisition Mode is UserFDK.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3LogicDeviceMemoryBank.AccessMode">
			<summary>When MemoryBank access is controlled by software, specifies how the memory is currently accessed.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3LogicDeviceMemoryBank.FIFOModeEnabled">
			<summary>Enables the FIFO mode for MemoryBank. Used when streaming.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3LogicDeviceMemoryBankCollection">
			<summary>Collection interface for the LogicDeviceMemoryBank repeated capability.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3Calibration">
			<summary>IVI Digitizer class-compliant calibration interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Calibration.SelfCalibrate">
			<summary>Executes all internal calibrations.  If the digitizer does not support calibration, this function silently succeeds.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Calibration.LoadFromFile(System.String)">
			<summary>Load calibration values and info from file.</summary>
			<param name="path">Path of the file where the information will be loaded from.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Calibration.SaveToFile(System.String)">
			<summary>Save calibration values and info in a binary file.</summary>
			<param name="path">Path of the binary file where the information will be saved to.</param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3Calibration.Cancel">
			<summary>Abort any running self-calibration and return.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Calibration.IsRequired">
			<summary>Read Only - Returns whether or not a self calibration is required.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Calibration.Equalization">
			<summary>Parameter for self-calibration equalization.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Calibration.TargetVoltageEnabled">
			<summary>When set to true, the self-calibration will minimize the noise level at the channel input value equal to Channel.CalibrationTargetVoltage. Note that when set to true, the Channel.Offset value is taken into account in the self-calibration, and therefore changing the Channel.CalibrationTargetVoltage value, or changing the Channel.Offset, will require a new self-calibration.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Calibration.InterChannelDelayEnabled">
			<summary>When set to true, the self-calibration will minimize the sampling delay between channels.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3Temperature">
			<summary>IVI Digitizer class-compliant temperature interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Temperature.Units">
			<summary>Specifies the temperature units returned by the Board Temperature and the Channel Temperature attributes.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3Temperature.BoardTemperature">
			<summary>Read Only - Indicates the temperature of the entire board.  The units are governed by the Temperature Units attribute.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3ReferenceOscillator">
			<summary>IVI Digitizer class-compliant reference oscillator interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ReferenceOscillator.Configure(Acqiris.AqMD3.ReferenceOscillatorSource,System.Double)">
			<summary>Configures the digitizer's reference oscillator.</summary>
			<param name="source">Specifies the source of the reference frequency signal. The driver uses this value to set the Reference Oscillator Source attribute. See the attribute description for more details.</param>
			<param name="frequency">Specifies the frequency of the external reference oscillator. This parameter is only used if the Source is set to External. The driver uses this value to set the Reference Oscillator Frequency attribute. See the attribute description for more details.</param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ReferenceOscillator.Source">
			<summary>Specifies the reference frequency source used.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ReferenceOscillator.ExternalFrequency">
			<summary>Specifies the frequency of the external signal which is as a frequency reference. This value is used only if the Reference Oscillator Source attribute is set to External. The units are Hertz.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ReferenceOscillator.OutputEnabled">
			<summary>Specifies whether or not the reference frequency signal appears at an output of the digitizer.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3SampleClock">
			<summary>IVI Digitizer class-compliant sample clock interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3SampleClock.Configure(Acqiris.AqMD3.SampleClockSource,System.Double,System.Double)">
			<summary>Configures the digitizer's sample clock.</summary>
			<param name="source">Specifies the source of the sample clock signal. The driver uses this value to set the Sample Clock Source attribute. See the attribute description for more details.</param>
			<param name="frequency">Specifies the frequency of the external sample clock. This parameter is only used if the Sample Clock Source attribute is set to External. The driver uses this value to set the External Sample Clock Frequency attribute. See the attribute description for more details.</param>
			<param name="divider">Specifies the value by which the external sample clock should be divided.  This value is used only if the Sample Clock Source attribute is set to External.</param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3SampleClock.Source">
			<summary>Specifies the clock used to pace acquisition sampling.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3SampleClock.ExternalFrequency">
			<summary>Specifies the frequency of the external signal which is as a sample clock. This value is used only if the Sample Clock Source attribute is set to External. The units are Hertz.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3SampleClock.OutputEnabled">
			<summary>Specifies whether or not the sample clock appears at a reference output of the digitizer.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3SampleClock.ExternalDivider">
			<summary>Specifies the value by which the external sample clock should be divided.  This value is used only if the Sample Clock Source attribute is set to External.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3ControlIO">
			<summary>Root interface for the ControlIO repeated capability.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ControlIO.Signal">
			<summary>Signal present on a Control IO connector.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ControlIO.AvailableSignals">
			<summary>Read Only - Comma separated list of available signal names that can be used for the Signal attribute of this repeated capability.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ControlIO.AnalogOut">
			<summary>Reference to the IAqMD3ControlIOAnalogOut interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ControlIO.OutSoftwareState">
			<summary>Signal state present on the ControlIO connector when the currently selected Signal is configured as Out-Software.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ControlIO.InSoftwareState">
			<summary>Signal state present on the ControlIO connector when the currently selected Signal is configured as In-Software.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ControlIO.InputTermination">
			<summary>Input termination selection.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3ControlIOCollection">
			<summary>Collection interface for the ControlIO repeated capability.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3InstrumentInfo">
			<summary>IAqMD3InstrumentInfo interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3InstrumentInfo.SerialNumberString">
			<summary>Read Only - The serial number of the instrument.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3InstrumentInfo.IOVersion">
			<summary>Read Only - Version of the IO Driver used by this module.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3InstrumentInfo.ChassisNumber">
			<summary>Read Only - Chassis number.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3InstrumentInfo.NbrADCBits">
			<summary>Read Only - Number of bits of data per sample from this module's ADCs.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3InstrumentInfo.Options">
			<summary>Read Only - Comma separated list of options installed in this instrument.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3InstrumentInfo.MonitoringValues">
			<summary>Pointer to the IAqMD3MonitoringValues interface.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3MonitoringValue">
			<summary>Root interface for the MonitoringValue repeated capability.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3MonitoringValue.CurrentValue">
			<summary>Read Only - Returns the current monitored value of the MonitoringValue.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3MonitoringValue.Unit">
			<summary>Read Only - Returns the unit of this monitoring value.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3MonitoringValue.LimitHigh">
			<summary>Read Only - Returns the limit value above which the instrument behavior may not be consistent with the specifications.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3MonitoringValue.LimitLow">
			<summary>Read Only - Returns the limit value below which the instrument behavior may not be consistent with the specifications.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3MonitoringValueCollection">
			<summary>Collection interface for the MonitoringValue repeated capability.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3DDCCore">
			<summary>Root interface for the DDCCore repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3DDCCore.FetchMultiRecordWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Acqiris.AqMD3.IAqMD3DDCWaveformCollection`1)">
			<summary>This function returns the (multi-record) waveform the digitizer acquired for the specified DDC core. The waveform is from a previously initiated acquisition. Returned waveform samples are complex values, stored as interleaved real and imaginary parts.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3DDCCore.FetchMultiRecordWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Acqiris.AqMD3.IAqMD3DDCWaveformCollection`1)">
			<summary>This function returns the (multi-record) waveform the digitizer acquired for the specified DDC core. The waveform is from a previously initiated acquisition. Returned waveform samples are complex values, stored as interleaved real and imaginary parts.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of data points per record to return.</param>
			<param name="waveforms">A Waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3DDCCore.FetchMultiRecordRawWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Acqiris.AqMD3.IAqMD3DDCRawWaveformCollection`1)">
			<summary>This function returns the (multi-record) waveform the digitizer acquired for the specified DDC core. The waveform is from a previously initiated acquisition. Returned waveform samples are complex values, stored as interleaved real and imaginary elements of type short.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of complex data points per record to return.</param>
			<param name="waveforms">A waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads.</param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3DDCCore.FetchMultiRecordRawWaveform(System.Int64,System.Int64,System.Int64,System.Int64,Acqiris.AqMD3.IAqMD3DDCRawWaveformCollection`1)">
			<summary>This function returns the (multi-record) waveform the digitizer acquired for the specified DDC core. The waveform is from a previously initiated acquisition. Returned waveform samples are complex values, stored as interleaved real and imaginary elements of type int.</summary>
			<param name="firstRecord">Specifies the number of the first record to read.</param>
			<param name="numberOfRecords">Specifies the number of consecutive records to read.</param>
			<param name="offsetWithinRecord">Specifies the start index within the record from which the data should be retrieved.</param>
			<param name="numberOfPointsPerRecord">Specifies the number of complex data points per record to return.</param>
			<param name="waveforms">A waveform collection object with a particular number of waveforms, each with data of a particular size needed only for reusing waveform object across reads.</param>
			<returns />
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DDCCore.CenterFrequency">
			<summary>Specifies the center frequency, in Hz, from which the digitizer will downconvert. It sets the local oscillator frequency.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DDCCore.DataSource">
			<summary>Selects the input data source used by the DDC core (e.g. "Channel1").</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DDCCore.DecimationDenominator">
			<summary>The denominator of the fractional decimation factor. The decimation factor is applied to the data source sample rate to determine the decimated rate used by the DDC core.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DDCCore.DecimationNumerator">
			<summary>The numerator of the fractional decimation factor. The decimation factor is applied to the data source sample rate to determine the decimated rate used by the DDC core.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DDCCore.LOInitialPhase">
			<summary>The initial phase of the local oscillator the DDC core will use during the downconversion.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3DDCCoreCollection">
			<summary>Collection interface for the DDCCore repeated capability.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3DDCWaveform`1">
			<summary>Generic interface for a DDC waveform.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DDCWaveform`1.Flags">
			<summary />
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3DDCWaveformCollection`1">
			<summary>An interface designed to encapsulate a collection of objects that implement IAqMD3DDCWaveform.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DDCWaveformCollection`1.Item(System.Int64)">
			<summary />
			<param name="index"></param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DDCWaveformCollection`1.ValidWaveformCount">
			<summary />
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3AccumulatedWaveform`1">
			<summary>IAqMD3AccumulatedWaveform is a generic interface for an AqMD3 accumulated waveform.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AccumulatedWaveform`1.Flags">
			<summary />
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3AccumulatedWaveformCollection`1">
			<summary>An interface designed to encapsulate a collection of objects that implement IAqMD3AccumulatedWaveform.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AccumulatedWaveformCollection`1.Item(System.Int64)">
			<summary />
			<param name="index"></param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AccumulatedWaveformCollection`1.ValidWaveformCount">
			<summary />
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AccumulatedWaveformCollection`1.ActualAverages">
			<summary />
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3AcquisitionStreaming">
			<summary>IAqMD3AcquisitionStreaming interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3AcquisitionStreaming.Mode">
			<summary>The Streaming Mode is set to Disabled for regular digitizer operation. It can be set to Continuous for CSR enabled instruments. It can be set to Triggered for CST enabled instruments.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3DDCRawWaveform`1">
			<summary>Generic interface for a raw DDC waveform.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DDCRawWaveform`1.Flags">
			<summary />
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3DDCRawWaveformCollection`1">
			<summary>An interface designed to encapsulate a collection of objects that implement IAqMD3DDCRawWaveform.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DDCRawWaveformCollection`1.Item(System.Int64)">
			<summary />
			<param name="index"></param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DDCRawWaveformCollection`1.ValidWaveformCount">
			<summary />
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3DataElements`1">
			<summary>Reserved.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3DataElements`1.GetAllElements">
			<summary />
			<returns />
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DataElements`1.Item(System.Int64)">
			<summary />
			<param name="index"></param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DataElements`1.FirstValidElement">
			<summary />
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DataElements`1.ActualElements">
			<summary />
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DataElements`1.Capacity">
			<summary />
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3StreamElements`1">
			<summary>IAqMD3StreamElements is a generic interface for an AqMD3 stream of elements.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3StreamElements`1.AvailableElements">
			<summary />
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3MemoryWaveform`1">
			<summary>Interface class for access to a waveform's underlying data array.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3MemoryWaveform`1.Data">
			<summary>A System.ArraySegment&lt;T&gt; representing the part of the underlying data array which contains the sample data of this waveform.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3ControlIOAnalogOut">
			<summary>IAqMD3ControlIOAnalogOut interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ControlIOAnalogOut.Level">
			<summary>Output level of the analog output, as signed left-aligned 16-bit DAC code.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3ChannelBaselineCorrection">
			<summary>IAqMD3ChannelBaselineCorrection interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3ChannelBaselineCorrection.Configure(Acqiris.AqMD3.BaselineCorrectionMode,System.Int32,Acqiris.AqMD3.BaselineCorrectionPulsePolarity,System.Int32)">
			<summary>Configures the baseline correction properties.</summary>
			<param name="mode">Defines the mode used during baseline correction. This value sets the Mode property.</param>
			<param name="pulseThreshold">Baseline pulse detection threshold, as signed left-aligned 16-bit ADC code. This value sets the PulseThreshold property.</param>
			<param name="pulsePolarity">Defines pulse polarity for baseline correction. This value sets the PulsePolarity property.</param>
			<param name="offset">Applies a digital offset after the baseline correction. Offset is a signed left-aligned 16-bit ADC code. This value sets the DigitalOffset property.</param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelBaselineCorrection.Mode">
			<summary>Defines the mode used during baseline correction.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelBaselineCorrection.DigitalOffset">
			<summary>Applies a digital offset after the baseline correction. DigitalOffset is a signed left-aligned 16-bit ADC code.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelBaselineCorrection.PulsePolarity">
			<summary>Defines pulse polarity for baseline correction.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelBaselineCorrection.PulseThreshold">
			<summary>Baseline pulse detection threshold, as signed left-aligned 16-bit ADC code.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3ChannelZeroSuppress">
			<summary>IAqMD3ChannelZeroSuppress interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelZeroSuppress.Threshold">
			<summary>In ZeroSuppress DataReduction mode, the total amount of data recorded is reduced by eliminating samples below the level of interest: Threshold. The value is specified as a signed left-aligned 16-bit ADC code (Normal acquisition mode) or a signed 32-bit value (Averager acquisition mode).</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelZeroSuppress.Hysteresis">
			<summary>Specifies the hysteresis width.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelZeroSuppress.ZeroValue">
			<summary>In ZeroSuppress DataReduction mode, the value used to replace suppressed samples in a standard waveform construct. It is a signed left-aligned 16-bit ADC code (Normal acquisition mode) or a signed 32-bit value (Averager acquisition mode).</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelZeroSuppress.PreGateSamples">
			<summary>Specifies the number of samples to be kept before gate start condition.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelZeroSuppress.PostGateSamples">
			<summary>Specifies the number of samples to be kept after gate stop condition.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3TimeReference">
			<summary>IAqMD3TimeReference interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TimeReference.Time">
			<summary>The current time on the instrument.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3TimeReference.ResetMode">
			<summary>Specifies how the instrument time is reset.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3PrivateCalibrationStep">
			<summary>Root interface for the PrivateCalibrationStep repeated capability.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivateCalibrationStep.Characterize(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="dataFilePath"></param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivateCalibrationStep.Execute">
			<summary />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivateCalibrationStep.GetParamBoolean(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivateCalibrationStep.GetParamInt32(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivateCalibrationStep.GetParamReal64(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivateCalibrationStep.GetParamString(System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<returns />
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivateCalibrationStep.SetParamBoolean(System.String,System.Boolean)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="value"></param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivateCalibrationStep.SetParamInt32(System.String,System.Int32)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="value"></param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivateCalibrationStep.SetParamReal64(System.String,System.Double)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="value"></param>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3PrivateCalibrationStep.SetParamString(System.String,System.String)">
			<summary>This function is private and for Acqiris-internal use only.</summary>
			<param name="name"></param>
			<param name="value"></param>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivateCalibrationStep.Enabled">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivateCalibrationStep.UseInputSignal">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivateCalibrationStep.DumpWaveforms">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3PrivateCalibrationStep.IgnoreErrors">
			<summary>This property is private and for Acqiris-internal use only.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3PrivateCalibrationStepCollection">
			<summary>Collection interface for the PrivateCalibrationStep repeated capability.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3ChannelPeakList">
			<summary>IAqMD3ChannelPeakList interface.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelPeakList.ValueSmoothingLength">
			<summary>Value smoothing length. It determines the length of the smoothing filter that applies to sample values.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelPeakList.DerivativeSmoothingLength">
			<summary>Derivative smoothing length. It determines the length of the smoothing filter that applies to samples' derivative values.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelPeakList.PulseValueThreshold">
			<summary>Pulse value threshold specifies data threshold for pulse detection. A rising edge of a pulse is detected when sample values exceed the configured threshold (the sample value's derivative must also exceed the derivative threshold rising).</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelPeakList.PulseDerivativeThresholdRising">
			<summary>Pulse derivative threshold rising is used for pulse detection. The rising edge of a pulse is detected when the sample values' derivative goes above the configured rise threshold.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelPeakList.PulseDerivativeThresholdFalling">
			<summary>Pulse derivative threshold falling is used for pulse detection. Falling edge is detected when the sample values' derivative goes below the configured fall threshold minus the configured derivative threshold hysteresis.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelPeakList.PulseDerivativeHysteresis">
			<summary>Pulse derivative hysteresis width.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelPeakList.Baseline">
			<summary>Pulse value baseline. It is used for the computation of the following pulse characteristics: sum-of-squares &amp; center-of-mass.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelPeakList.DataStorageMode">
			<summary>Selects data storage mode for PeakList acquisition mode.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelPeakList.DescriptorFormat">
			<summary>Specifies the format of PeakList descriptors.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelPeakList.ObservationWindowDelay">
			<summary>Specifies the delay, in samples, of the observation window start with respect to the beginning of the record.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelPeakList.ObservationWindowWidth">
			<summary>Specifies the width, in samples, of the observation window.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelPeakList.ObservationWindowEnabled">
			<summary>Specifies whether the observation window is enabled.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3ChannelPeakList.ObservationWindowGranularity">
			<summary>Specifies the granularity, in samples, of observation window Delay and Width parameters.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3DigitalOut">
			<summary>IAqMD3DigitalOut interface.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3DigitalOut.InitiateGeneration">
			<summary>Start the pulses generation by software.</summary>
		</member>
		<member name="M:Acqiris.AqMD3.IAqMD3DigitalOut.AbortGeneration">
			<summary>Abort the pulses generation.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DigitalOut.StartSource">
			<summary>Specify the source that triggers digital output generation.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DigitalOut.Outputs">
			<summary>Reference to the IAqMD3DigitalOutputCollection interface.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3DigitalOutput">
			<summary>Root interface for the Output repeated capability.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DigitalOutput.NumberOfPulses">
			<summary>The number of pulses to generate (ignored in Periodic mode).</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DigitalOutput.PulsePeriod">
			<summary>Pulse period in seconds.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DigitalOutput.PulseWidth">
			<summary>Pulse width in seconds.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DigitalOutput.PulseDelay">
			<summary>Pulse delay in seconds.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DigitalOutput.PulsePolarity">
			<summary>Pulse polarity.</summary>
		</member>
		<member name="P:Acqiris.AqMD3.IAqMD3DigitalOutput.Mode">
			<summary>The type of signal to be generated.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.IAqMD3DigitalOutputCollection">
			<summary>Collection interface for the Outputrepeated capability.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.CoreVersion">
			<summary />
		</member>
		<member name="M:Acqiris.AqMD3.CoreVersion.#ctor(Acqiris.AqMD3.LogicDeviceCore,System.Int32,System.String)">
			<summary />
			<param name="coreId">Core Identifier.</param>
			<param name="Version">Core Version Number, with bits 0-15 stating minor version number, and bits 16-30 stating major version number.</param>
			<param name="VersionString">Core Version Number, as a String.</param>
		</member>
		<member name="P:Acqiris.AqMD3.CoreVersion.CoreId">
			<summary />
		</member>
		<member name="P:Acqiris.AqMD3.CoreVersion.Version">
			<summary />
		</member>
		<member name="P:Acqiris.AqMD3.CoreVersion.VersionString">
			<summary />
		</member>
		<member name="T:Acqiris.AqMD3.BufferAddresses">
			<summary />
		</member>
		<member name="M:Acqiris.AqMD3.BufferAddresses.#ctor(System.Int64,System.Int64)">
			<summary />
			<param name="baseaddr"></param>
			<param name="limitaddr"></param>
		</member>
		<member name="P:Acqiris.AqMD3.BufferAddresses.Base">
			<summary />
		</member>
		<member name="P:Acqiris.AqMD3.BufferAddresses.Limit">
			<summary />
		</member>
		<member name="T:Acqiris.AqMD3.UserControlProcessingType">
			<summary>Defined values for UserControl Processing Type.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.UserControlProcessingType.Type1">
			<summary>UserControl Processing Type 1.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.UserControlProcessingType.Type2">
			<summary>UserControl Processing Type 2.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.UserControlCountersMode">
			<summary>Defined values for UserControl CountersMode.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.UserControlCountersMode.Normal">
			<summary>Configures the User Control Counters in Standard mode.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.UserControlCountersMode.Streaming">
			<summary>Configures the User Control Counters in Streaming mode.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.UserControlInterSegmentDelayMode">
			<summary>Defined values for UserControl Inter Segment Delay Mode.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.UserControlInterSegmentDelayMode.Software">
			<summary>Configures the User Control Inter Segment Delay to use Software value.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.UserControlInterSegmentDelayMode.UserFirmware">
			<summary>Configures the User Control Inter Segment Delay to be controlled by User Firmware.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.UserControlTriggerEnableSource">
			<summary>Defined values for the UserControl Trigger Enable Source.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.UserControlTriggerEnableSource.Segmentation">
			<summary>Configures the use of the Trigger Enable signal from the Segmentation mechanism.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.UserControlTriggerEnableSource.UserFirmware">
			<summary>Configures the use of the Trigger Enable custom signal from the User Firmware.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.UserControlTriggerSelection">
			<summary>Defined values for the UserControl Trigger Selection.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.UserControlTriggerSelection.Analog">
			<summary>Configures the use of the Trigger coming from the analog source.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.UserControlTriggerSelection.Digital">
			<summary>Configures the use of the Trigger coming from the digital source.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AcquisitionStatusResult">
			<summary>Defined values for the acquisition status result.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.AcquisitionStatusResult.True">
			<summary>The digitizer is currently in the queried state.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.AcquisitionStatusResult.False">
			<summary>The digitizer is not currently in the queried state.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.AcquisitionStatusResult.Unknown">
			<summary>The driver cannot query the instrument to determine if the digitizer is in the queried state.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.AcquisitionMode">
			<summary>Defined values for the acquisition mode.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.AcquisitionMode.Normal">
			<summary>Selects normal digitizer mode</summary>
		</member>
		<member name="F:Acqiris.AqMD3.AcquisitionMode.UserFDK">
			<summary>Selects user FDK mode.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.AcquisitionMode.Averager">
			<summary>Selects averager mode.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.AcquisitionMode.PeakDetection">
			<summary>Selects peak detection mode.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.AcquisitionMode.BaseBand0">
			<summary>Selects Base Band 0 acquisition mode.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.AcquisitionMode.DigitalDownConversion">
			<summary>Selects DigitalDownConversion acquisition mode.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.AcquisitionMode.PeakList">
			<summary>Selects PeakList mode. Requires PKL option.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.StreamType">
			<summary>Defined values for the Stream Type.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.StreamType.Markers">
			<summary>A stream of this type provides time markers related to acquired or emulated samples.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.StreamType.MinMax">
			<summary>A stream of this type provides min-max pairs computed over a frame of acquired or emulated samples.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.StreamType.Samples">
			<summary>A stream of this type provides acquired or emulated data samples.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.BaselineCorrectionMode">
			<summary>Defined values for the baseline correction mode.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.BaselineCorrectionMode.Disabled">
			<summary>Disables baseline correction.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.BaselineCorrectionMode.Continuous">
			<summary>Selects continuous baseline correction mode. In this mode the data values for baseline correction are accumulated continuously, even during an acquisition.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.BaselineCorrectionMode.BetweenAcquisitions">
			<summary>Selects between acquisitions baseline correction mode. In this mode the data values for baseline correction are only accumulated between acquisitions.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.VerticalCoupling">
			<summary>Defined values for channel Coupling.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.VerticalCoupling.AC">
			<summary>The digitizer AC couples the input signal.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.VerticalCoupling.DC">
			<summary>The digitizer DC couples the input signal.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.VerticalCoupling.Gnd">
			<summary>The digitizer couples the channel to the ground.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.TriggerSlope">
			<summary>Defined values for edge trigger slope.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TriggerSlope.Negative">
			<summary>A negative (falling) edge passing through the trigger level triggers the digitizer.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TriggerSlope.Positive">
			<summary>A positive (rising) edge passing through the trigger level triggers the digitizer.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.SelfTriggerMode">
			<summary>Defined values for SelfTrigger mode.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.SelfTriggerMode.CustomWave">
			<summary>Sets SelfTrigger mode to Custom Wave. The SelfTrigger core must be configured with the 'Trigger.Sources[].SelfTrigger.CustomWave.LoadConfigurationFile()' method (see Remarks section).</summary>
		</member>
		<member name="F:Acqiris.AqMD3.SelfTriggerMode.SquareWave">
			<summary>Sets SelfTrigger mode to Square Wave. The square wave parameters can be adapted through the 'Trigger.Sources[].SelfTrigger.SquareWave.Configure()' method (see Remarks section).</summary>
		</member>
		<member name="F:Acqiris.AqMD3.SelfTriggerMode.ArmedPulse">
			<summary>Sets SelfTrigger mode to Armed Pulse. Refer to the Product User Manual for more details.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.TriggerCoupling">
			<summary>Defined values for trigger Coupling.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TriggerCoupling.AC">
			<summary>The digitizer AC couples the trigger signal.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TriggerCoupling.DC">
			<summary>The digitizer DC couples the trigger signal.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TriggerCoupling.NoiseReject">
			<summary>The digitizer filters out the noise from the arm signal.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TriggerCoupling.HFReject">
			<summary>The digitizer filters out the high frequencies from the arm signal.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TriggerCoupling.LFReject">
			<summary>The digitizer filters out the low frequencies from the arm signal.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.TriggerType">
			<summary>Defined values for trigger type</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TriggerType.Edge">
			<summary>Configures the digitizer for edge triggering. An edge trigger occurs when the trigger signal specified with the Trigger Source attribute passes the voltage threshold specified with the Trigger Level attribute and has the slope specified with the Trigger Slope attribute.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TriggerType.Width">
			<summary>Configures the digitizer for width triggering. Use the IviDigitizerWidthTrigger extension properties and methods to configure the trigger.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TriggerType.Runt">
			<summary>Configures the digitizer for runt triggering. Use the IviDigitizerRuntTrigger extension properties and methods to configure the trigger.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TriggerType.Glitch">
			<summary>Configures the digitizer for glitch triggering. Use the IviDigitizerGlitchTrigger extension properties and methods to configure the trigger.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TriggerType.TV">
			<summary>Configures the digitizer for triggering on TV signals. Use the IviDigitizerTVTrigger extension properties and methods to configure the trigger.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TriggerType.Window">
			<summary>Configures the digitizer for window triggering. Use the IviDigitizerWindowTrigger extension properties and methods to configure the trigger.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.LogicDeviceCore">
			<summary>Defined values for the LogicDevice CoreId.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceCore.PCIe">
			<summary>Identifier for the LogicDevice PCIe Core.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceCore.DDR3A">
			<summary>Identifier for the LogicDevice DDR3 bank A Core.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceCore.DDR3B">
			<summary>Identifier for the LogicDevice DDR3 bank B Core.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceCore.CalibrationDigitizer">
			<summary>Identifier for the LogicDevice Calibration Digitizer Core.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceCore.IFDLUp">
			<summary>Identifier for the LogicDevice IFDL Up Core.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceCore.IFDLDown">
			<summary>Identifier for the LogicDevice IFDL Down Core.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceCore.IFDLControl">
			<summary>Identifier for the LogicDevice IFDL Control Core.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceCore.QDR2">
			<summary>Identifier for the LogicDevice QDR2 Core.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceCore.ADCInterface">
			<summary>Identifier for the LogicDevice ADC Interface Core.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceCore.StreamPrepare">
			<summary>Identifier for the LogicDevice Stream Prepare Core.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceCore.TriggerManager">
			<summary>Identifier for the LogicDevice Trigger Manager Core.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.LogicDeviceMemoryBankAccessControl">
			<summary>Defined values for LogicDevice MemoryBank Access Control.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceMemoryBankAccessControl.Software">
			<summary>Software control of LogicDevice MemoryBank. In this mode, the value of LogicDevice Memory Access Mode indicates whether the memory is used for reading or writing.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceMemoryBankAccessControl.UserFirmware">
			<summary>Custom control of LogicDevice MemoryBank from the User Firmware. In this mode, the User Firmware controls accesses to the memory, and the value of LogicDevice Memory Acces Mode is ignored.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.LogicDeviceMemoryBankAccessMode">
			<summary>Defined values for LogicDevice MemoryBank Access Mode.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceMemoryBankAccessMode.Write">
			<summary>Under Software LogicDevice MemoryBank Access Control, this value indicates that the memory is currently used for Writing.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceMemoryBankAccessMode.Read">
			<summary>Under Software LogicDevice MemoryBank Access Control, this value indicates that the memory is currently used for Reading.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.LogicDeviceStreamMode">
			<summary>Defined values for the LogicDevice Stream Mode.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceStreamMode.Acquisition">
			<summary>In Acquisition mode, the LogicDevice receives actual values from the ADC. This is the default mode.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceStreamMode.Emulation">
			<summary>In Emulation mode, the LogicDevice receives the values that have been uploaded to each stream using WriteStreamWaveformInt16().</summary>
		</member>
		<member name="F:Acqiris.AqMD3.LogicDeviceStreamMode.Sequential">
			<summary>Reserved.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.TemperatureUnits">
			<summary>Defined values for the temperature units.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TemperatureUnits.Celsius">
			<summary>Temperature values returned from the digitizer are in degrees Celsius.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TemperatureUnits.Fahrenheit">
			<summary>Temperature values returned from the digitizer are in degrees Fahrenheit.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TemperatureUnits.Kelvin">
			<summary>Temperature values returned from the digitizer are in degrees Kelvin.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.ReferenceOscillatorSource">
			<summary>Defined values for the reference oscillator source.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.ReferenceOscillatorSource.Internal">
			<summary>The internal reference oscillator is used.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.ReferenceOscillatorSource.External">
			<summary>An external reference oscillator is used.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.SampleClockSource">
			<summary>Defined values for the sample clock source.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.SampleClockSource.Internal">
			<summary>The internal sample clock is used.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.SampleClockSource.External">
			<summary>An external sample clock is used.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.CalibrationEqualization">
			<summary>Defined values for the calibration equalization.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.CalibrationEqualization.Off">
			<summary>Disables the equalization filter.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.CalibrationEqualization.Custom">
			<summary>Selects the Custom equalization filter.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.CalibrationEqualization.SmoothRollOff">
			<summary>Selects the Smooth Roll-off equalization filter.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.CalibrationEqualization.SharpRollOff">
			<summary>Selects the Sharp Roll-off equalization filter.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.StreamingMode">
			<summary>Defined values for Streaming Mode</summary>
		</member>
		<member name="F:Acqiris.AqMD3.StreamingMode.Disabled">
			<summary>Disables streaming.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.StreamingMode.Continuous">
			<summary>Enables streaming in CSR mode (Continuous Simultaneous acquisition and Readout). Refer to the Product User Manual for more details.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.StreamingMode.Triggered">
			<summary>Enables streaming in CST mode (Continuous Simultaneous acquisition and readout with Trigger). Refer to the Product User Manual for more details.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.StreamingMode.TriggeredCount">
			<summary>Enables streaming in CST mode (Continuous Simultaneous acquisition and readout with Trigger). Streaming acquisition terminates when the acquisition of the number records to acquire is complete.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.BaselineCorrectionPulsePolarity">
			<summary>Defined values for the baseline correction pulse polarity.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.BaselineCorrectionPulsePolarity.Negative">
			<summary>Specifies a negative polarity signal pulse.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.BaselineCorrectionPulsePolarity.Positive">
			<summary>Specifies a positive polarity signal pulse.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.DataReductionMode">
			<summary>Defined values for the data reduction mode.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.DataReductionMode.Disabled">
			<summary>Disables data reduction.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.DataReductionMode.ZeroSuppress">
			<summary>Enables zero suppress compression.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.TimeResetMode">
			<summary />
		</member>
		<member name="F:Acqiris.AqMD3.TimeResetMode.Immediate">
			<summary>The time of the instrument will be set immediately to the time given by IVI.NET Time property or IVI-C SetTime function.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TimeResetMode.OnFirstTrigger">
			<summary>The time of the instrument will be set to the time given by IVI.NET Time property or IVI-C SetTime function when the first trigger of the next acquisition will be accepted.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.TimeResetMode.OnTriggerEnable">
			<summary>The time of the instrument will be set to the time given by IVI.NET Time property or IVI-C SetTime function when the next acquisition will have its trigger enabled.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.PeakListDataStorageMode">
			<summary />
		</member>
		<member name="F:Acqiris.AqMD3.PeakListDataStorageMode.None">
			<summary>Disables storage of PeakList data.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.PeakListDataStorageMode.Raw">
			<summary>Selects storage of raw samples.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.PeakListDataStorageMode.Filtered">
			<summary>Selects storage of filtered samples.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.PeakListDataStorageMode.FilteredDerivative">
			<summary>Selects storage of filtered derivative samples.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.ControlIOState">
			<summary>Defined values for the ControlIO state.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.ControlIOState.Low">
			<summary>Represents the Low ControlIO state.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.ControlIOState.High">
			<summary>Represents the High ControlIO state.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.ControlIOState.Undetermined">
			<summary>Represents an Undetermined ControlIO state.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.DigitalOutputPulsePolarity">
			<summary />
		</member>
		<member name="F:Acqiris.AqMD3.DigitalOutputPulsePolarity.Negative">
			<summary />
		</member>
		<member name="F:Acqiris.AqMD3.DigitalOutputPulsePolarity.Positive">
			<summary />
		</member>
		<member name="T:Acqiris.AqMD3.DigitalOutputMode">
			<summary />
		</member>
		<member name="F:Acqiris.AqMD3.DigitalOutputMode.Disabled">
			<summary />
		</member>
		<member name="F:Acqiris.AqMD3.DigitalOutputMode.LowLevel">
			<summary />
		</member>
		<member name="F:Acqiris.AqMD3.DigitalOutputMode.HighLevel">
			<summary />
		</member>
		<member name="F:Acqiris.AqMD3.DigitalOutputMode.Burst">
			<summary />
		</member>
		<member name="F:Acqiris.AqMD3.DigitalOutputMode.Periodic">
			<summary />
		</member>
		<member name="T:Acqiris.AqMD3.PeakListDescriptorFormat">
			<summary>Specifies descriptor format in PeakList acquisition mode.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.PeakListDescriptorFormat.Extended">
			<summary>Both trigger and peak descriptors are 256-bit. Peak descriptors contain peak coordinate, center of mass and sum of squares information.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.PeakListDescriptorFormat.Peak">
			<summary>Both Trigger and Peak descriptors are 128-bit. Peak descriptors contain peak coordinates.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.PeakListDescriptorFormat.CenterOfMass">
			<summary>Both Trigger and Peak descriptors are 128-bit. Peak descriptors contain center of mass coordinates.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.PeakListDescriptorFormat.PeakArea">
			<summary>Both Trigger and Peak descriptors are 128-bit. Peak descriptors contain peak area information.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.PeakListDescriptorFormat.Custom1">
			<summary>Both Trigger and Peak descriptors are 128-bit. Custom format for peak descriptors.</summary>
		</member>
		<member name="T:Acqiris.AqMD3.ControlIOInputTermination">
			<summary />
		</member>
		<member name="F:Acqiris.AqMD3.ControlIOInputTermination.WeakPullUp">
			<summary>Disables 50 Ohm input termination.</summary>
		</member>
		<member name="F:Acqiris.AqMD3.ControlIOInputTermination.PullDown">
			<summary>Enables 50 Ohm input termination.</summary>
		</member>
	</members>
</doc>